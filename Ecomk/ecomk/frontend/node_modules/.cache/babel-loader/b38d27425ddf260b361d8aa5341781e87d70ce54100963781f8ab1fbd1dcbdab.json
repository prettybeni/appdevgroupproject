{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-detail\"\n};\nconst _hoisted_2 = {\n  class: \"product-image\"\n};\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"product-info\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"quantity\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"size\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  key: 2,\n  class: \"addons\"\n};\nconst _hoisted_9 = [\"id\", \"value\"];\nconst _hoisted_10 = [\"for\"];\nconst _hoisted_11 = {\n  class: \"note\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.product.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: `http://localhost:5000${$data.product.image_url}`,\n    alt: $data.product.name\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, \"Price: P\" + _toDisplayString($data.product.price), 1 /* TEXT */), _createCommentVNode(\" Quantity selection \"), $data.product.available ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"quantity\"\n  }, \"Quantity:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"quantity\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.quantity = $event),\n    min: \"1\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.quantity]])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Size selection \"), $data.product.sizes && $data.product.sizes.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"size\"\n  }, \"Size:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.size = $event),\n    id: \"size\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.product.sizes, (size, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: size\n    }, _toDisplayString(size), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.size]])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add-ons selection \"), $data.product.addons && $data.product.addons.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Add-ons:\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.product.addons, (addon, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: addon,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedAddons = $event),\n      value: addon\n    }, null, 8 /* PROPS */, _hoisted_9), [[_vModelCheckbox, $data.selectedAddons]]), _createElementVNode(\"label\", {\n      for: addon\n    }, _toDisplayString(addon), 9 /* TEXT, PROPS */, _hoisted_10)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Note input \"), _createElementVNode(\"div\", _hoisted_11, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"note\"\n  }, \"Note:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.note = $event),\n    id: \"note\",\n    placeholder: \"Add a note for the seller\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.note]])]), _createCommentVNode(\" Add to Cart Button \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addToCart && $options.addToCart(...args))\n  }, \"Add to Cart\")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","product","name","_hoisted_2","src","image_url","alt","_hoisted_3","_hoisted_4","price","_createCommentVNode","available","_hoisted_5","for","type","id","_cache","$event","quantity","min","sizes","length","_hoisted_6","size","_Fragment","_renderList","index","value","_hoisted_7","addons","_hoisted_8","addon","selectedAddons","_hoisted_9","_hoisted_10","_hoisted_11","note","placeholder","onClick","args","$options","addToCart"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n    <div class=\"product-detail\">\r\n      <h1>{{ product.name }}</h1>\r\n  \r\n      <div class=\"product-image\">\r\n        <img :src=\"`http://localhost:5000${product.image_url}`\" :alt=\"product.name\" />\r\n      </div>\r\n  \r\n      <div class=\"product-info\">\r\n        <p>Price: P{{ product.price }}</p>\r\n  \r\n        <!-- Quantity selection -->\r\n        <div class=\"quantity\" v-if=\"product.available\">\r\n          <label for=\"quantity\">Quantity:</label>\r\n          <input type=\"number\" id=\"quantity\" v-model=\"quantity\" min=\"1\" />\r\n        </div>\r\n  \r\n        <!-- Size selection -->\r\n        <div class=\"size\" v-if=\"product.sizes && product.sizes.length\">\r\n          <label for=\"size\">Size:</label>\r\n          <select v-model=\"size\" id=\"size\">\r\n            <option v-for=\"(size, index) in product.sizes\" :key=\"index\" :value=\"size\">{{ size }}</option>\r\n          </select>\r\n        </div>\r\n  \r\n        <!-- Add-ons selection -->\r\n        <div class=\"addons\" v-if=\"product.addons && product.addons.length\">\r\n          <label>Add-ons:</label>\r\n          <div v-for=\"(addon, index) in product.addons\" :key=\"index\">\r\n            <input type=\"checkbox\" :id=\"addon\" v-model=\"selectedAddons\" :value=\"addon\" />\r\n            <label :for=\"addon\">{{ addon }}</label>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Note input -->\r\n        <div class=\"note\">\r\n          <label for=\"note\">Note:</label>\r\n          <textarea v-model=\"note\" id=\"note\" placeholder=\"Add a note for the seller\"></textarea>\r\n        </div>\r\n  \r\n        <!-- Add to Cart Button -->\r\n        <button @click=\"addToCart\">Add to Cart</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        product: {}, // Store product details\r\n        quantity: 1,\r\n        size: '',\r\n        selectedAddons: [],\r\n        note: '',\r\n      };\r\n    },\r\n    mounted() {\r\n      const productId = this.$route.params.productId;\r\n      console.log('Product ID:', productId); // Check if the productId is correct\r\n      this.fetchProductDetails(productId);\r\n    },\r\n    methods: {\r\n        async fetchProductDetails(productId) {\r\n  try {\r\n    const response = await axios.get(`http://localhost:5000/api/product/${productId}`);\r\n    console.log(response.data); // Check the structure of the returned data\r\n    this.product = response.data;\r\n    this.size = this.product.sizes ? this.product.sizes[0] : ''; // Set default size if available\r\n  } catch (error) {\r\n    console.error('Error fetching product details:', error);\r\n    // Optionally handle the error by displaying a message in the UI\r\n  }\r\n},\r\n      async addToCart() {\r\n        const cartItem = {\r\n          productId: this.product.id,\r\n          quantity: this.quantity,\r\n          size: this.size,\r\n          addons: this.selectedAddons,\r\n          note: this.note,\r\n        };\r\n  \r\n        // Call your API to add the item to the cart\r\n        try {\r\n          await axios.post('/api/cart', cartItem);\r\n          this.$router.push('/cart'); // Redirect to cart page after adding the item\r\n        } catch (error) {\r\n          console.error('Error adding to cart:', error);\r\n          // Optionally handle the error by displaying a message in the UI\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-detail {\r\n    padding: 20px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .product-info {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .product-info p {\r\n    font-size: 1.2em;\r\n  }\r\n  \r\n  .product-info .quantity,\r\n  .product-info .size,\r\n  .product-info .addons,\r\n  .product-info .note {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  button {\r\n    background-color: #ffb7a1;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #f28268;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}