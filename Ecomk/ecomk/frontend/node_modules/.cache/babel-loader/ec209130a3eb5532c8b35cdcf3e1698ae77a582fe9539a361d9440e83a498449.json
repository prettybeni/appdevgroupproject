{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"new-password-page\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Reset Password\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.submitNewPassword && $options.submitNewPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"newPassword\"\n  }, \"New Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"newPassword\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirm New Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Submit\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitNewPassword","_hoisted_2","for","type","id","$event","$data","newPassword","required","_hoisted_3","confirmPassword","errorMessage","_hoisted_4","_toDisplayString","_createCommentVNode"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\NewPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"new-password-page\">\r\n      <h2>Reset Password</h2>\r\n      \r\n      <form @submit.prevent=\"submitNewPassword\">\r\n        <div class=\"form-group\">\r\n          <label for=\"newPassword\">New Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"newPassword\" \r\n            v-model=\"newPassword\" \r\n            required \r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm New Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"confirmPassword\" \r\n            v-model=\"confirmPassword\" \r\n            required \r\n          />\r\n        </div>\r\n  \r\n        <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n        \r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        errorMessage: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async submitNewPassword() {\r\n        // Check if the passwords match\r\n        if (this.newPassword !== this.confirmPassword) {\r\n          this.errorMessage = \"Passwords do not match.\";\r\n          return;\r\n        }\r\n  \r\n        // Reset error message\r\n        this.errorMessage = '';\r\n  \r\n        try {\r\n          // Assume a token is required for the password reset request\r\n          const token = this.$route.query.token;\r\n  \r\n          // Send a request to update the password\r\n          const response = await fetch(`http://localhost:8080/api/reset-password`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              token,\r\n              newPassword: this.newPassword\r\n            })\r\n          });\r\n  \r\n          if (response.status === 200) {\r\n            alert('Password successfully reset. Redirecting to login...');\r\n            this.$router.push('/');\r\n          } else {\r\n            const data = await response.json();\r\n            this.errorMessage = data.message || 'An error occurred. Please try again.';\r\n          }\r\n        } catch (error) {\r\n          this.errorMessage = 'An error occurred. Please try again.';\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .new-password-page {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 2em;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 1em;\r\n  }\r\n  \r\n  .error-message {\r\n    color: red;\r\n    font-size: 0.9em;\r\n  }\r\n  \r\n  button {\r\n    padding: 0.5em 1em;\r\n    border: none;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    font-size: 1em;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAmB;;EAIrBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;;EAf/BC,GAAA;EAyB+BD,KAAK,EAAC;;;uBAxBjCE,mBAAA,CA4BM,OA5BNC,UA4BM,G,0BA3BJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAElBA,mBAAA,CAwBO;IAxBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAJnBC,cAAA,KAAAC,IAAA,KAI6BC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;MACtCJ,mBAAA,CAQM,OARNO,UAQM,G,0BAPJP,mBAAA,CAA6C;IAAtCQ,GAAG,EAAC;EAAa,GAAC,cAAY,sB,gBACrCR,mBAAA,CAKE;IAJAS,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,aAAa;IAT5B,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAUqBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,QAAQ,EAAR;iDADSF,KAAA,CAAAC,WAAW,E,KAKxBb,mBAAA,CAQM,OARNe,UAQM,G,0BAPJf,mBAAA,CAAyD;IAAlDQ,GAAG,EAAC;EAAiB,GAAC,sBAAoB,sB,gBACjDR,mBAAA,CAKE;IAJAS,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,iBAAiB;IAnBhC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAoBqBC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IACxBG,QAAQ,EAAR;iDADSF,KAAA,CAAAI,eAAe,E,KAKnBJ,KAAA,CAAAK,YAAY,I,cAArBnB,mBAAA,CAAmE,KAAnEoB,UAAmE,EAAAC,gBAAA,CAAnBP,KAAA,CAAAK,YAAY,oBAzBpEG,mBAAA,gB,0BA2BQpB,mBAAA,CAAqC;IAA7BS,IAAI,EAAC;EAAQ,GAAC,QAAM,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}