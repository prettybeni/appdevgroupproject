{"ast":null,"code":"export default {\n  name: 'AddIngredient',\n  data() {\n    return {\n      isMenuOpen: false,\n      // Track menu open/close state\n      activeDropdown: null // Track active dropdown\n    };\n  },\n  methods: {\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen; // Toggle menu visibility\n    },\n    toggleDropdown(dropdown) {\n      // Close the dropdown if it's already open; otherwise, open it\n      if (this.activeDropdown === dropdown) {\n        this.activeDropdown = null; // Close if it's already open\n      } else {\n        this.activeDropdown = dropdown; // Open the clicked dropdown\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","isMenuOpen","activeDropdown","methods","toggleMenu","toggleDropdown","dropdown"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\addIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-dashboard\">\r\n      <!-- Navigation Bar -->\r\n      <nav class=\"navbar\">\r\n        <!-- Hamburger Menu (on the left) -->\r\n        <div class=\"hamburger-menu\" @click=\"toggleMenu\">\r\n          <i class=\"fas fa-bars\"></i> <!-- Font Awesome Hamburger Icon -->\r\n        </div>\r\n  \r\n        <!-- Admin Dashboard Text -->\r\n        <div class=\"admin-dashboard-text\">\r\n          Add Ingredient\r\n        </div>\r\n  \r\n        <!-- Navigation Links -->\r\n        <div class=\"nav-links\" :class=\"{ 'active': isMenuOpen }\">\r\n          <!-- Sales Button (added at the top of the dropdown) -->\r\n          <router-link to=\"/admin\" class=\"nav-link\" active-class=\"active-nav-link\">Sales</router-link>\r\n  \r\n          <!-- Ingredients Group -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('ingredients')\" class=\"dropdown-btn\">\r\n              Ingredients\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'ingredients',\r\n                'fas fa-chevron-right': activeDropdown !== 'ingredients'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'ingredients'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addIngredient\" exact-active-class=\"active-nav-link\">Add Ingredients</router-link>\r\n              <router-link to=\"/admin/manageIngredients\">Manage Ingredients</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Products Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('products')\" class=\"dropdown-btn\">\r\n              Products\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'products',\r\n                'fas fa-chevron-right': activeDropdown !== 'products'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'products'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addProd\">Add Products</router-link>\r\n              <router-link to=\"/admin/products\">Manage Products</router-link>\r\n            </div>\r\n          </div>\r\n\r\n           <!-- Items Group -->\r\n        <div class=\"nav-dropdown\">\r\n          <button @click=\"toggleDropdown('items')\" class=\"dropdown-btn\">\r\n            Items\r\n            <i :class=\"{'fas fa-chevron-down': activeDropdown === 'items', 'fas fa-chevron-right': activeDropdown !== 'items'}\" class=\"dropdown-indicator\"></i>\r\n          </button>\r\n          <div v-if=\"activeDropdown === 'items'\" class=\"dropdown-content\">\r\n            <router-link to=\"/admin/addItem\">Add Item</router-link>\r\n            <router-link to=\"/admin/manageItems\">Manage Items</router-link>\r\n          </div>\r\n        </div>\r\n  \r\n          <!-- Other Links -->\r\n          <router-link to=\"/admin/viewUsers\" class=\"nav-link\">Users</router-link>\r\n          <router-link to=\"/admin/viewOrders\" class=\"nav-link\">Order</router-link>\r\n          <router-link to=\"/admin/viewLogs\" class=\"nav-link\">Log</router-link>\r\n          <router-link to=\"/admin/demandPrediction\" class=\"nav-link\">Demand Forecasting</router-link>\r\n          <router-link to=\"/admin/createCashier\" class=\"nav-link\">Create Cashier Account</router-link>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Dashboard Content -->\r\n       \r\n      <div class=\"login-container\">\r\n        <h1>Login</h1><br><br>\r\n        <form @submit.prevent=\"handleLogin\">\r\n          <div class=\"form-group\">\r\n            <label for=\"usernameOrEmail\">Email or Username</label>\r\n            <input type=\"text\" id=\"usernameOrEmail\" v-model=\"usernameOrEmail\" required placeholder=\"Email or username\" />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" v-model=\"password\" required placeholder=\"Enter your password\" />\r\n            <p id=\"res\"><router-link to=\"/reset-password\">Forgot your password?</router-link></p> <!-- Reset password link -->\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n          <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n          <div class=\"footer\">\r\n            <p>Don't have an account? <router-link to=\"/register\">Register here</router-link></p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n   \r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'AddIngredient',\r\n    data() {\r\n      return {\r\n        isMenuOpen: false, // Track menu open/close state\r\n        activeDropdown: null, // Track active dropdown\r\n      };\r\n    },\r\n    methods: {\r\n      toggleMenu() {\r\n        this.isMenuOpen = !this.isMenuOpen; // Toggle menu visibility\r\n      },\r\n      toggleDropdown(dropdown) {\r\n        // Close the dropdown if it's already open; otherwise, open it\r\n        if (this.activeDropdown === dropdown) {\r\n          this.activeDropdown = null; // Close if it's already open\r\n        } else {\r\n          this.activeDropdown = dropdown; // Open the clicked dropdown\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Copy the same styles as in AdminDashboard.vue */\r\n  .admin-dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n  \r\n  /* Navigation Bar */\r\n  .navbar {\r\n    width: 100%;\r\n    padding: 22px 0;\r\n    background-color: #f5a8a0; /* Darker pink background */\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n  \r\n  /* Hamburger Menu */\r\n  .hamburger-menu {\r\n    display: block;\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    color: #6b4226; /* Lighter pink that complements the darker navbar */\r\n    position: absolute;\r\n    left: 20px; /* Position it on the left side */\r\n    z-index: 3;\r\n  }\r\n  \r\n  /* Admin Dashboard Text */\r\n  .admin-dashboard-text {\r\n    font-size: 20px; /* Reduced font size */\r\n    font-weight: bold;\r\n    color: #6b4226; /* Lighter color for text */\r\n    flex-grow: 1;\r\n    text-align: center;\r\n    z-index: 2;\r\n  }\r\n  \r\n  /* Navigation Links */\r\n  .nav-links {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 300px;\r\n    height: 100%;\r\n    background-color: #ffe3c5; /* Same as the navbar background */\r\n    transform: translateX(-100%); /* Initially hide the menu off-screen */\r\n    transition: transform 0.5s ease-in-out; /* Animation for sliding in */\r\n    z-index: 1;\r\n    padding-top: 82px; /* Space for the navbar */\r\n    margin-top: 8px; /* Remove any extra margin */\r\n  }\r\n  \r\n  .nav-links.active {\r\n    transform: translateX(0); /* Slide in when active */\r\n  }\r\n  \r\n  /* Dropdown Menu */\r\n  .nav-dropdown {\r\n    margin-bottom: 0; /* Remove margin to avoid extra space */\r\n    margin-left: -10px;\r\n  }\r\n  \r\n  .dropdown-btn {\r\n    background: transparent;\r\n    color: #6b4226; /* Matching the light brown color for text */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding: 18px 30px; /* Adjusted padding for consistent sizing */\r\n    width: 100%;\r\n    text-align: left;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n  }\r\n  \r\n  .dropdown-btn:hover {\r\n    background: #ffb7a1; /* Hover color matching the active tab */\r\n    padding: 18px 30px; /* Maintain same padding on hover */\r\n  }\r\n  \r\n  /* Dropdown Content */\r\n  .dropdown-content {\r\n    display: none;\r\n    background: #fffaf0; /* Light background for dropdown */\r\n    padding-left: 0; /* Remove extra padding to ensure full width */\r\n    width: 100%; /* Ensure the dropdown content takes up the full width */\r\n    box-sizing: border-box; /* Ensure padding is inside */\r\n  }\r\n  \r\n  .dropdown-content a {\r\n    color: #6b4226; /* Matching the light brown color for text */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding: 12px 20px; /* Ensure consistent padding for the links */\r\n    display: block;\r\n    text-decoration: none;\r\n    width: 100%; /* Ensure the link takes up the full width */\r\n    box-sizing: border-box; /* Ensure padding is inside the link */\r\n    transition: background-color 0.3s ease, padding 0.3s ease; /* Ensure smooth transition */\r\n  }\r\n  \r\n  .dropdown-content a:hover {\r\n    background-color: #ffb7a1; /* Hover color matching the active tab */\r\n    padding: 12px 20px; /* Keep the same padding on hover */\r\n  }\r\n  \r\n  /* Display the dropdown content when active */\r\n  .nav-dropdown .dropdown-content {\r\n    display: block;\r\n  }\r\n  \r\n  /* Individual links (for single items like View Users, etc.) */\r\n  .nav-link {\r\n    background-color: #ffe3c5; /* Same as the navbar background */\r\n    color: #6b4226; /* Matching the light brown color for text */\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    padding: 12px 20px; /* Adjusted padding for better uniformity */\r\n    width: 100%; /* Ensure full width */\r\n    text-align: left;\r\n    border: none;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    display: block;\r\n    box-sizing: border-box; /* Ensure padding is inside the element */\r\n    transition: background-color 0.3s ease, padding 0.3s ease; /* Ensure smooth transition */\r\n    margin-bottom: 0; /* Removed any bottom margin to avoid extra space */\r\n  }\r\n  \r\n  /* Ensure uniform hover behavior for all links */\r\n  .nav-link:hover {\r\n    background-color: #ffb7a1; /* Hover color matching the active tab */\r\n    padding: 12px 20px; /* Keep the same padding on hover */\r\n  }\r\n  \r\n  /* Active Class for the Add Ingredient Link */\r\n  .active-nav-link {\r\n    background-color: #ffb7a1; /* Active color matching the active tab */\r\n    font-weight: bold; /* Make it bold when active */\r\n  }\r\n  \r\n  /* Styling for the Add Ingredient page content */\r\n  .dashboard-content {\r\n    padding: 20px;\r\n    width: 100%;\r\n    background-color: #fffaf0; /* Light beige background */\r\n    margin-top: 70px; /* Add margin for top space */\r\n  }\r\n  </style>\r\n  "],"mappings":"AAiGE,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MAAE;MACnBC,cAAc,EAAE,IAAI,CAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU,EAAE;IACtC,CAAC;IACDI,cAAcA,CAACC,QAAQ,EAAE;MACvB;MACA,IAAI,IAAI,CAACJ,cAAa,KAAMI,QAAQ,EAAE;QACpC,IAAI,CAACJ,cAAa,GAAI,IAAI,EAAE;MAC9B,OAAO;QACL,IAAI,CAACA,cAAa,GAAII,QAAQ,EAAE;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}