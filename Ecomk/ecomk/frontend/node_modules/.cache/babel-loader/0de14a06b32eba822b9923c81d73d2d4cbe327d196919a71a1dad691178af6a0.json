{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useRouter } from 'vue-router'; // Use Vue Router for redirection\n\nexport default {\n  data() {\n    return {\n      token: this.$route.query.token,\n      // Grab the token from the URL query\n      countdown: 5,\n      // Countdown timer for redirect\n      error: ''\n    };\n  },\n  created() {\n    this.verifyAccount();\n    this.startRedirectCountdown();\n  },\n  methods: {\n    async verifyAccount() {\n      try {\n        const token = this.$route.query.token; // Retrieve token from query string\n        const response = await axios.get(`http://localhost:5000/api/verify?token=${token}`);\n      } catch (err) {\n        if (err.response) {\n          this.error = err.response.data.message; // Display the error message from the backend\n        } else {\n          this.error = 'An error occurred';\n        }\n      }\n    },\n    startRedirectCountdown() {\n      const interval = setInterval(() => {\n        if (this.countdown > 0) {\n          this.countdown--;\n        } else {\n          clearInterval(interval);\n          this.$router.push('/'); // Redirect to the login page\n        }\n      }, 1000); // Update every second\n    }\n  }\n};","map":{"version":3,"names":["axios","useRouter","data","token","$route","query","countdown","error","created","verifyAccount","startRedirectCountdown","methods","response","get","err","message","interval","setInterval","clearInterval","$router","push"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Verify.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h2>Verified</h2>\r\n    <p>Your email has been successfully verified.</p>\r\n    <p v-if=\"countdown > 0\">Redirecting in {{ countdown }} seconds...</p>\r\n    <p v-else>Redirecting...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router'; // Use Vue Router for redirection\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      token: this.$route.query.token,  // Grab the token from the URL query\r\n      countdown: 5,  // Countdown timer for redirect\r\n      error: ''\r\n    };\r\n  },\r\n  created() {\r\n    this.verifyAccount();\r\n    this.startRedirectCountdown();\r\n  },\r\n  methods: {\r\n    async verifyAccount() {\r\n      try {\r\n        const token = this.$route.query.token;  // Retrieve token from query string\r\n        const response = await axios.get(`http://localhost:5000/api/verify?token=${token}`);\r\n\r\n        \r\n      } catch (err) {\r\n        if (err.response) {\r\n          this.error = err.response.data.message;  // Display the error message from the backend\r\n        } else {\r\n          this.error = 'An error occurred';\r\n        }\r\n      }\r\n    },\r\n    startRedirectCountdown() {\r\n      const interval = setInterval(() => {\r\n        if (this.countdown > 0) {\r\n          this.countdown--;\r\n        } else {\r\n          clearInterval(interval);\r\n          this.$router.push('/');  // Redirect to the login page\r\n        } \r\n      }, 1000); // Update every second\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  background-color: #f8f8f8;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  color: #28a745; /* Success green */\r\n}\r\n\r\np {\r\n  color: #333;\r\n  font-size: 16px;\r\n}\r\n\r\n.loading, .error {\r\n  font-size: 18px;\r\n  color: #d9534f; /* Error red */\r\n}\r\n</style>\r\n"],"mappings":";AAUA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,SAAQ,QAAS,YAAY,EAAE;;AAExC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK;MAAG;MACjCG,SAAS,EAAE,CAAC;MAAG;MACfC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACC,sBAAsB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMN,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK,EAAG;QACxC,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,0CAA0CV,KAAK,EAAE,CAAC;MAGrF,EAAE,OAAOW,GAAG,EAAE;QACZ,IAAIA,GAAG,CAACF,QAAQ,EAAE;UAChB,IAAI,CAACL,KAAI,GAAIO,GAAG,CAACF,QAAQ,CAACV,IAAI,CAACa,OAAO,EAAG;QAC3C,OAAO;UACL,IAAI,CAACR,KAAI,GAAI,mBAAmB;QAClC;MACF;IACF,CAAC;IACDG,sBAAsBA,CAAA,EAAG;MACvB,MAAMM,QAAO,GAAIC,WAAW,CAAC,MAAM;QACjC,IAAI,IAAI,CAACX,SAAQ,GAAI,CAAC,EAAE;UACtB,IAAI,CAACA,SAAS,EAAE;QAClB,OAAO;UACLY,aAAa,CAACF,QAAQ,CAAC;UACvB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAG;QAC3B;MACF,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}