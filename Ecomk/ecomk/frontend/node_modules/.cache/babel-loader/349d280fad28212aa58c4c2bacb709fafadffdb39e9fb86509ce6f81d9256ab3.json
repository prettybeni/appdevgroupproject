{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AddProduct',\n  data() {\n    return {\n      product: {\n        name: '',\n        price: '',\n        category: '',\n        description: '',\n        image: ''\n      }\n    };\n  },\n  methods: {\n    async addProduct() {\n      try {\n        // Example API call to add the product\n        const response = await fetch('/api/products', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.product)\n        });\n        if (response.ok) {\n          alert('Product added successfully');\n          this.$router.push('/admin'); // Redirect back to the admin dashboard\n        } else {\n          alert('Failed to add product');\n        }\n      } catch (error) {\n        console.error('Error adding product:', error);\n        alert('An error occurred while adding the product');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","product","price","category","description","image","methods","addProduct","response","fetch","method","headers","body","JSON","stringify","ok","alert","$router","push","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Add.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-product\">\r\n      <h1>Add New Product</h1>\r\n      <form @submit.prevent=\"addProduct\">\r\n        <div>\r\n          <label for=\"productName\">Product Name</label>\r\n          <input type=\"text\" id=\"productName\" v-model=\"product.name\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"productPrice\">Price</label>\r\n          <input type=\"number\" id=\"productPrice\" v-model=\"product.price\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"productCategory\">Category</label>\r\n          <input type=\"text\" id=\"productCategory\" v-model=\"product.category\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"productDescription\">Description</label>\r\n          <textarea id=\"productDescription\" v-model=\"product.description\" required></textarea>\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"productImage\">Product Image URL</label>\r\n          <input type=\"image\" id=\"productImage\" v-model=\"product.image\" required />\r\n        </div>\r\n        \r\n  \r\n        <button type=\"submit\">Add Product</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'AddProduct',\r\n    data() {\r\n      return {\r\n        product: {\r\n          name: '',\r\n          price: '',\r\n          category: '',\r\n          description: '',\r\n          image: ''\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      async addProduct() {\r\n        try {\r\n          // Example API call to add the product\r\n          const response = await fetch('/api/products', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.product)\r\n          });\r\n  \r\n          if (response.ok) {\r\n            alert('Product added successfully');\r\n            this.$router.push('/admin'); // Redirect back to the admin dashboard\r\n          } else {\r\n            alert('Failed to add product');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error adding product:', error);\r\n          alert('An error occurred while adding the product');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .add-product {\r\n    padding: 20px;\r\n  }\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  input, textarea {\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAoCE,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,WAAW,EAAE,EAAE;QACfC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,eAAe,EAAE;UAC5CC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,OAAO;QACnC,CAAC,CAAC;QAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,4BAA4B,CAAC;UACnC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAC/B,OAAO;UACLF,KAAK,CAAC,uBAAuB,CAAC;QAChC;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CH,KAAK,CAAC,4CAA4C,CAAC;MACrD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}