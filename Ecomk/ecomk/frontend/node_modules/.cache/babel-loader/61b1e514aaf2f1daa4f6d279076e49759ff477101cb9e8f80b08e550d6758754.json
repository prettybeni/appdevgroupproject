{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"manage-ingredients\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"mobile-menu\"\n};\nconst _hoisted_3 = {\n  border: \"1\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_7 = {\n  class: \"modal-content\"\n};\nconst _hoisted_8 = {\n  class: \"modal-actions\"\n};\nconst _hoisted_9 = {\n  key: 2,\n  class: \"modal\"\n};\nconst _hoisted_10 = {\n  class: \"modal-content\"\n};\nconst _hoisted_11 = {\n  class: \"modal-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Hamburger Menu \"), _createElementVNode(\"div\", {\n    class: \"hamburger-menu\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleMenu && $options.toggleMenu(...args))\n  }, _cache[7] || (_cache[7] = [_createElementVNode(\"span\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", {\n    class: \"bar\"\n  }, null, -1 /* HOISTED */)])), _createCommentVNode(\" Mobile Menu (Initially Hidden) \"), $data.isMenuOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[8] || (_cache[8] = [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#\"\n  }, \"Manage Ingredients\")]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#\"\n  }, \"Other Link\")]), _createCommentVNode(\" Add more menu items as needed \")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _cache[11] || (_cache[11] = _createElementVNode(\"h1\", null, \"Manage Ingredients\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_3, [_cache[9] || (_cache[9] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Unit\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ingredients, (ingredient, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ingredient.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ingredient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ingredient.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ingredient.unit), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openEditModal(index)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.openAddStockModal(index)\n    }, \"Add Stock\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Edit Name Modal \"), $data.showEditModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Edit Ingredient Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.modalName = $event),\n    placeholder: \"Enter new name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.modalName]]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveNameEdit && $options.saveNameEdit(...args))\n  }, \"Save\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.closeEditModal && $options.closeEditModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add Stock Modal \"), $data.showAddStockModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"h2\", null, \"Add Stock for \" + _toDisplayString($data.selectedIngredient.name), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.modalQuantity = $event),\n    min: \"1\",\n    placeholder: \"Enter quantity to add\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.modalQuantity]]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.addQuantity && $options.addQuantity(...args))\n  }, \"Confirm\"), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.closeAddStockModal && $options.closeAddStockModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","border","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleMenu","$data","isMenuOpen","_hoisted_2","href","_hoisted_3","_Fragment","_renderList","ingredients","ingredient","index","id","_toDisplayString","name","quantity","unit","$event","openEditModal","_hoisted_4","openAddStockModal","_hoisted_5","showEditModal","_hoisted_6","_hoisted_7","type","modalName","placeholder","_hoisted_8","saveNameEdit","closeEditModal","showAddStockModal","_hoisted_9","_hoisted_10","selectedIngredient","modalQuantity","min","_hoisted_11","addQuantity","closeAddStockModal"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\manageIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"manage-ingredients\">\r\n      <!-- Hamburger Menu -->\r\n      <div class=\"hamburger-menu\" @click=\"toggleMenu\">\r\n        <span class=\"bar\"></span>\r\n        <span class=\"bar\"></span>\r\n        <span class=\"bar\"></span>\r\n      </div>\r\n  \r\n      <!-- Mobile Menu (Initially Hidden) -->\r\n      <div v-if=\"isMenuOpen\" class=\"mobile-menu\">\r\n        <ul>\r\n          <li><a href=\"#\">Manage Ingredients</a></li>\r\n          <li><a href=\"#\">Other Link</a></li>\r\n          <!-- Add more menu items as needed -->\r\n        </ul>\r\n      </div>\r\n  \r\n      <h1>Manage Ingredients</h1>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Quantity</th>\r\n            <th>Unit</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(ingredient, index) in ingredients\" :key=\"ingredient.id\">\r\n            <td>{{ ingredient.name }}</td>\r\n            <td>{{ ingredient.quantity }}</td>\r\n            <td>{{ ingredient.unit }}</td>\r\n            <td>\r\n              <button @click=\"openEditModal(index)\">Edit</button>\r\n              <button @click=\"openAddStockModal(index)\">Add Stock</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <!-- Edit Name Modal -->\r\n      <div v-if=\"showEditModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Edit Ingredient Name</h2>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"modalName\" \r\n            placeholder=\"Enter new name\" \r\n          />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"saveNameEdit\">Save</button>\r\n            <button @click=\"closeEditModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add Stock Modal -->\r\n      <div v-if=\"showAddStockModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Add Stock for {{ selectedIngredient.name }}</h2>\r\n          <input \r\n            type=\"number\" \r\n            v-model=\"modalQuantity\" \r\n            min=\"1\" \r\n            placeholder=\"Enter quantity to add\" \r\n          />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"addQuantity\">Confirm</button>\r\n            <button @click=\"closeAddStockModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ingredients: [], // List of ingredients from the API\r\n      showEditModal: false, // Controls visibility of the Edit Name modal\r\n      showAddStockModal: false, // Controls visibility of the Add Stock modal\r\n      selectedIngredient: null, // Ingredient selected for any modal\r\n      modalName: '', // Temporary name for editing in the modal\r\n      modalQuantity: 0, // Quantity to add in the Add Stock modal\r\n      isMenuOpen: false, // State of the hamburger menu\r\n    };\r\n  },\r\n  methods: {\r\n    // Fetch ingredients from the API\r\n    async fetchIngredients() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/admin/manageIngredients');\r\n        this.ingredients = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching ingredients:', error);\r\n      }\r\n    },\r\n\r\n    // Toggle the hamburger menu visibility\r\n    toggleMenu() {\r\n      this.isMenuOpen = !this.isMenuOpen;\r\n    },\r\n\r\n    // Open the Edit Name modal\r\n    openEditModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalName = this.selectedIngredient.name; // Pre-fill with the current name\r\n      this.showEditModal = true;\r\n    },\r\n\r\n    // Close the Edit Name modal\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalName = '';\r\n    },\r\n\r\n    // Save the edited name\r\n    async saveNameEdit() {\r\n      if (this.modalName.trim() === '') {\r\n        alert('Name cannot be empty.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}`, { name: this.modalName });\r\n        this.selectedIngredient.name = this.modalName; // Update the local state\r\n        alert('Ingredient name updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error updating ingredient name:', error);\r\n      } finally {\r\n        this.closeEditModal();\r\n      }\r\n    },\r\n\r\n    // Open the Add Stock modal\r\n    openAddStockModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalQuantity = 0; // Reset the modal input\r\n      this.showAddStockModal = true;\r\n    },\r\n\r\n    // Close the Add Stock modal\r\n    closeAddStockModal() {\r\n      this.showAddStockModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalQuantity = 0;\r\n    },\r\n\r\n    // Add quantity to the selected ingredient\r\n    async addQuantity() {\r\n      if (this.modalQuantity > 0) {\r\n        try {\r\n          await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}/add-quantity`, {\r\n            quantity: this.modalQuantity,\r\n          });\r\n          // Update local state\r\n          this.selectedIngredient.quantity += this.modalQuantity;\r\n          alert('Stock added successfully!');\r\n        } catch (error) {\r\n          console.error('Error adding stock:', error);\r\n        } finally {\r\n          this.closeAddStockModal();\r\n        }\r\n      } else {\r\n        alert('Please enter a valid stock quantity.');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchIngredients();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.manage-ingredients {\r\n  padding: 20px;\r\n}\r\n\r\n/* Hamburger Menu */\r\n.hamburger-menu {\r\n  display: none;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 30px;\r\n  height: 25px;\r\n  cursor: pointer;\r\n}\r\n\r\n.hamburger-menu .bar {\r\n  width: 100%;\r\n  height: 4px;\r\n  background-color: #333;\r\n}\r\n\r\n.mobile-menu {\r\n  position: absolute;\r\n  top: 50px;\r\n  right: 0;\r\n  background-color: #f4f4f4;\r\n  width: 200px;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.mobile-menu ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.mobile-menu li {\r\n  padding: 10px;\r\n}\r\n\r\n.mobile-menu li a {\r\n  text-decoration: none;\r\n  color: #333;\r\n}\r\n\r\n.mobile-menu li a:hover {\r\n  background-color: #ddd;\r\n}\r\n\r\n/* Show hamburger menu on mobile */\r\n@media (max-width: 768px) {\r\n  .hamburger-menu {\r\n    display: flex;\r\n  }\r\n  table {\r\n    display: none; /* Hide the table in mobile view */\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}