{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';\n      this.successMessage = '';\n      if (!this.username || !this.first_name || !this.last_name || !this.email || !this.phone || !this.password || !this.confirmPassword) {\n        this.errorMessage = 'All fields are required!';\n        return;\n      }\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match!';\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.username,\n          first_name: this.first_name,\n          last_name: this.last_name,\n          email: this.email,\n          phone: this.phone,\n          password: this.password\n        });\n        if (response.status === 201) {\n          this.$router.push('/');\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          this.errorMessage = 'Email or username already exists';\n        } else {\n          this.errorMessage = 'Something went wrong. Please try again later.';\n        }\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","first_name","last_name","email","phone","password","confirmPassword","errorMessage","successMessage","methods","submitForm","response","post","status","$router","push","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\n  <div id=\"bg\">\n    <div class=\"content-wrapper\">\n      <div class=\"image-container\">\n        <img src=\"../../public/img/logo.png\" alt=\"Logo\" class=\"logo-image\" />\n      </div>\n      <div class=\"register-container\">\n        <h1>Register</h1>\n        <form @submit.prevent=\"submitForm\">\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input v-model=\"username\" type=\"text\" id=\"username\" placeholder=\"Enter your username\" required />\n          </div>\n          <div class=\"form-group\">\n  <label for=\"first_name\">First Name</label>\n  <div class=\"name-inputs\">\n    <input v-model=\"first_name\" type=\"text\" id=\"first_name\" placeholder=\"Enter your first name\" required />\n    <input v-model=\"last_name\" type=\"text\" id=\"last_name\" placeholder=\"Enter your last name\" required />\n  </div>\n</div>\n\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input v-model=\"email\" type=\"email\" id=\"email\" placeholder=\"Enter your email\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"phone\">Phone</label>\n            <input v-model=\"phone\" type=\"tel\" id=\"phone\" placeholder=\"Enter your phone number\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input v-model=\"password\" type=\"password\" id=\"password\" placeholder=\"Enter your password\" required />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"confirmPassword\">Confirm Password</label>\n            <input v-model=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" placeholder=\"Confirm your password\" required />\n          </div>\n          <button type=\"submit\">Register</button>\n          <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n          <div v-if=\"successMessage\" class=\"success\">{{ successMessage }}</div>\n          <div class=\"footer\">\n            <p>Already have an account? <router-link to=\"/\">Log in</router-link></p>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      if (!this.username || !this.first_name || !this.last_name || !this.email || !this.phone || !this.password || !this.confirmPassword) {\n        this.errorMessage = 'All fields are required!';\n        return;\n      }\n\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match!';\n        return;\n      }\n\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.username,\n          first_name: this.first_name,\n          last_name: this.last_name,\n          email: this.email,\n          phone: this.phone,\n          password: this.password,\n        });\n\n        if (response.status === 201) { \n          this.$router.push('/');\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          this.errorMessage = 'Email or username already exists';\n        } else {\n          this.errorMessage = 'Something went wrong. Please try again later.';\n        }\n        console.error(error);\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n#bg {\n  background: linear-gradient(45deg, #D8C4A3, #A3D8C4, #D8A3C4);\n  height: 100vh;\n  background-size: 600% 600%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: gradientAnimation 15s ease infinite;\n}\n\n@keyframes gradientAnimation {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n.content-wrapper { \n  display: flex;\n  width: 80%; /* Adjust width as needed */\n  max-width: 1200px;\n}\n\n.form-group {\n  margin-bottom: 20px; /* Reduce space between input fields */\n  display: flex;\n  flex-direction: column; /* Stack label above the textbox */\n  align-items: flex-start; /* Align the label to the left */\n}\n\nlabel {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\n.image-container {\n  flex: 1; /* Takes up half the width */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.logo-image {\n  width: 80%; /* Adjust image size */\n  max-width: 400px; /* Set a max width for the image */\n  height: auto;\n  margin-right: 200px;\n}\n\n.register-container {\n  flex: .6; /* Takes up the other half of the width */\n  padding: 50px 50px;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  background-color: rgba(255, 255, 255, 0.13);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Optional: Add shadow for better contrast */\n  border-radius: 10px;\n  backdrop-filter: blur(10px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n}\n\ninput {\n  display: block;\n  width: 100%; /* Ensure textboxes take the full width */\n  box-sizing: border-box; /* Ensures padding doesn't affect the width */\n  height: 50px; /* Match the textbox height */\n  background-color: rgba(255,255,255,0.07);\n  border-radius: 3px;\n  padding: 0 16px; /* Equal padding on both sides */\n  font-size: 14px;\n  font-weight: 300;\n  color: white; /* Text color */\n}\n\ninput::placeholder {\n  background-color: rgba(255,255,255,0.07);\n}\n\nh1 {\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n/* Make the container a flex container to position the inputs side by side */\n.name-inputs {\n  display: flex;\n  justify-content: space-between; /* Space them out equally */\n  gap: 10px; /* Add space between the input fields */\n}\n\n.name-inputs input {\n  width: 48%; /* Adjust width so they fit together */\n  height: 50px; /* Match the textbox height */\n  background-color: rgba(255,255,255,0.07);\n  border-radius: 3px;\n  padding: 0 16px; /* Equal padding on both sides */\n  font-size: 14px;\n  font-weight: 300;\n}\n\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n\nbutton {\n  margin-top: 20px;\n  width: 100%; /* Ensure the button takes up the full width */\n  padding: 15px 0;\n  background-color: #28a745;\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #218838;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.success {\n  color: green;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.footer {\n  margin-top: 20px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.footer a {\n  color: #007bff;\n}\n</style>\n"],"mappings":";AAkDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACH,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,EAAE;MAExB,IAAI,CAAC,IAAI,CAACR,QAAO,IAAK,CAAC,IAAI,CAACC,UAAS,IAAK,CAAC,IAAI,CAACC,SAAQ,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,eAAe,EAAE;QAClI,IAAI,CAACC,YAAW,GAAI,0BAA0B;QAC9C;MACF;MAEA,IAAI,IAAI,CAACF,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,yBAAyB;QAC7C;MACF;MAEA,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAE;UACtEZ,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BC,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAIM,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACL,QAAO,IAAKK,KAAK,CAACL,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACN,YAAW,GAAI,kCAAkC;QACxD,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,+CAA+C;QACrE;QACAU,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}