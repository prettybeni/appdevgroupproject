{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'AddIngredient',\n  data() {\n    return {\n      ingredientName: '',\n      // Ingredient name\n      quantity: '',\n      // Quantity input\n      unit: '',\n      // Default unit is grams\n      errorMessage: '',\n      // Error message\n      successMessage: '' // Success message\n    };\n  },\n  methods: {\n    async handleAddIngredient() {\n      this.errorMessage = '';\n      this.successMessage = '';\n\n      // Check for empty fields\n      if (!this.ingredientName || !this.quantity || !this.unit) {\n        this.errorMessage = 'All fields are required.';\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/admin/addIngredient', {\n          name: this.ingredientName,\n          quantity: this.quantity,\n          unit: this.unit\n        });\n        if (response.status === 200) {\n          this.$router.push('/admin/manageIngredient');\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 409) {\n          this.errorMessage = 'Ingredient already exists.';\n        } else {\n          this.errorMessage = 'An error occurred while adding the ingredient.';\n        }\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","ingredientName","quantity","unit","errorMessage","successMessage","methods","handleAddIngredient","response","post","status","$router","push","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\addIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-dashboard\">\r\n      <!-- Navigation Bar -->\r\n      <nav class=\"navbar\">\r\n        <!-- Hamburger Menu (on the left) -->\r\n        <div class=\"hamburger-menu\" @click=\"toggleMenu\">\r\n          <i class=\"fas fa-bars\"></i> <!-- Font Awesome Hamburger Icon -->\r\n        </div>\r\n  \r\n        <!-- Admin Dashboard Text -->\r\n        <div class=\"admin-dashboard-text\">\r\n          Add Ingredient\r\n        </div>\r\n  \r\n        <!-- Navigation Links -->\r\n        <div class=\"nav-links\" :class=\"{ 'active': isMenuOpen }\">\r\n          <!-- Sales Button (added at the top of the dropdown) -->\r\n          <router-link to=\"/admin\" class=\"nav-link\" active-class=\"active-nav-link\">Sales</router-link>\r\n  \r\n          <!-- Ingredients Group -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('ingredients')\" class=\"dropdown-btn\">\r\n              Ingredients\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'ingredients',\r\n                'fas fa-chevron-right': activeDropdown !== 'ingredients'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'ingredients'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addIngredient\" exact-active-class=\"active-nav-link\">Add Ingredients</router-link>\r\n              <router-link to=\"/admin/manageIngredients\">Manage Ingredients</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Products Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('products')\" class=\"dropdown-btn\">\r\n              Products\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'products',\r\n                'fas fa-chevron-right': activeDropdown !== 'products'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'products'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addProd\">Add Products</router-link>\r\n              <router-link to=\"/admin/products\">Manage Products</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Items Group -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('items')\" class=\"dropdown-btn\">\r\n              Items\r\n              <i :class=\"{'fas fa-chevron-down': activeDropdown === 'items', 'fas fa-chevron-right': activeDropdown !== 'items'}\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'items'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addItem\">Add Item</router-link>\r\n              <router-link to=\"/admin/manageItems\">Manage Items</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Other Links -->\r\n          <router-link to=\"/admin/viewUsers\" class=\"nav-link\">Users</router-link>\r\n          <router-link to=\"/admin/viewOrders\" class=\"nav-link\">Order</router-link>\r\n          <router-link to=\"/admin/viewLogs\" class=\"nav-link\">Log</router-link>\r\n          <router-link to=\"/admin/demandPrediction\" class=\"nav-link\">Demand Forecasting</router-link>\r\n          <router-link to=\"/admin/createCashier\" class=\"nav-link\">Create Cashier Account</router-link>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Dashboard Content -->\r\n      <div class=\"add-ingredient-container\">\r\n    <div class=\"card\">\r\n      <h1>Add Ingredient</h1><br><br>\r\n      <form @submit.prevent=\"handleAddIngredient\">\r\n        <div class=\"form-group\">\r\n          <label for=\"ingredientName\">Ingredient Name</label>\r\n          <input type=\"text\" id=\"ingredientName\" v-model=\"ingredientName\" required placeholder=\"Enter ingredient name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n  <label for=\"quantity\">Quantity</label>\r\n  <div class=\"quantity-container\">\r\n    <input type=\"number\" id=\"quantity\" v-model=\"quantity\" required placeholder=\"Enter quantity\" />\r\n    <select v-model=\"unit\" required>\r\n      <option value=\"ml\">ml</option>\r\n      <option value=\"grams\" selected>grams</option> <!-- Default value set to 'grams' -->\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n\r\n        <button type=\"submit\">Add Ingredient</button>\r\n        <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\nexport default {\r\n  name: 'AddIngredient',\r\n  data() {\r\n    return {\r\n      ingredientName: '', // Ingredient name\r\n      quantity: '', // Quantity input\r\n      unit: '', // Default unit is grams\r\n      errorMessage: '', // Error message\r\n      successMessage: '', // Success message\r\n    };\r\n  },\r\n  methods: {\r\n    async handleAddIngredient() {\r\n  this.errorMessage = '';\r\n  this.successMessage = '';\r\n\r\n  // Check for empty fields\r\n  if (!this.ingredientName || !this.quantity || !this.unit) {\r\n    this.errorMessage = 'All fields are required.';\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/api/admin/addIngredient', {\r\n      name: this.ingredientName,\r\n      quantity: this.quantity,\r\n      unit: this.unit,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      this.$router.push('/admin/manageIngredient');\r\n    }\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 409) {\r\n      this.errorMessage = 'Ingredient already exists.';\r\n    } else {\r\n      this.errorMessage = 'An error occurred while adding the ingredient.';\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n  }\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n  .admin-dashboard {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n/* Navigation Bar */\r\n.navbar {\r\n  width: 100%;\r\n  padding: 22px 0;\r\n  background-color: #f5a8a0; /* Darker pink background */\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n/* Hamburger Menu */\r\n.hamburger-menu {\r\n  display: block;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  color: #6b4226; /* Lighter pink that complements the darker navbar */\r\n  position: absolute;\r\n  left: 20px; /* Position it on the left side */\r\n  z-index: 3;\r\n}\r\n\r\n/* Admin Dashboard Text */\r\n.admin-dashboard-text {\r\n  font-size: 20px; /* Reduced font size */\r\n  font-weight: bold;\r\n  color: #6b4226; /* Lighter color for text */\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  z-index: 2;\r\n}\r\n\r\n/* Navigation Links */\r\n.nav-links {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  background-color: #ffe3c5; /* Same as the navbar background */\r\n  transform: translateX(-100%); /* Initially hide the menu off-screen */\r\n  transition: transform 0.5s ease-in-out; /* Animation for sliding in */\r\n  z-index: 1;\r\n  padding-top: 82px; /* Space for the navbar */\r\n  margin-top: 8px; /* Remove any extra margin */\r\n}\r\n\r\n.nav-links.active {\r\n  transform: translateX(0); /* Slide in when active */\r\n}\r\n\r\n/* Sales Button */\r\n.sales-btn {\r\n  background-color: #f5a8a0; /* Matching navbar color */\r\n  color: #6b4226; /* Lighter color for text */\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  padding: 12px 20px;\r\n  width: 100%;\r\n  text-align: left;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.sales-btn:hover {\r\n  background-color: #ffb7a1; /* Hover color matching the active tab */\r\n}\r\n\r\n/* Dropdown Menu */\r\n.nav-dropdown {\r\n  margin-bottom: 0; /* Remove margin to avoid extra space */\r\n  margin-left: -10px;\r\n}\r\n\r\n.dropdown-btn {\r\n  background: transparent;\r\n  color: #6b4226; /* Matching the light brown color for text */\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 18px 30px; /* Adjusted padding for consistent sizing */\r\n  width: 100%;\r\n  text-align: left;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.dropdown-btn:hover {\r\n  background: #ffb7a1; /* Hover color matching the active tab */\r\n  padding: 18px 30px; /* Maintain same padding on hover */\r\n}\r\n\r\n/* Dropdown Content */\r\n.dropdown-content {\r\n  display: none;\r\n  background: #fffaf0; /* Light background for dropdown */\r\n  padding-left: 0; /* Remove extra padding to ensure full width */\r\n  width: 100%; /* Ensure the dropdown content takes up the full width */\r\n  box-sizing: border-box; /* Ensure padding is inside */\r\n}\r\n\r\n.dropdown-content a {\r\n  color: #6b4226; /* Matching the light brown color for text */\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 12px 20px; /* Ensure consistent padding for the links */\r\n  display: block;\r\n  text-decoration: none;\r\n  width: 100%; /* Ensure the link takes up the full width */\r\n  box-sizing: border-box; /* Ensure padding is inside the link */\r\n  transition: background-color 0.3s ease, padding 0.3s ease; /* Ensure smooth transition */\r\n}\r\n\r\n.dropdown-content a:hover {\r\n  background-color: #ffb7a1; /* Hover color matching the active tab */\r\n  padding: 12px 20px; /* Keep the same padding on hover */\r\n}\r\n\r\n/* Display the dropdown content when active */\r\n.nav-dropdown .dropdown-content {\r\n  display: block;\r\n}\r\n\r\n/* Individual links (for single items like View Users, etc.) */\r\n/* Individual links (for single items like View Users, etc.) */\r\n.nav-link {\r\n  background-color: #ffe3c5; /* Same as the navbar background */\r\n  color: #6b4226; /* Matching the light brown color for text */\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 12px 20px; /* Adjusted padding for better uniformity */\r\n  width: 100%; /* Ensure full width */\r\n  text-align: left;\r\n  border: none;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  display: block;\r\n  box-sizing: border-box; /* Ensure padding is inside the element */\r\n  transition: background-color 0.3s ease, padding 0.3s ease; /* Ensure smooth transition */\r\n  margin-bottom: 0; /* Removed any bottom margin to avoid extra space */\r\n}\r\n\r\n/* Ensure uniform hover behavior for all links */\r\n.nav-link:hover {\r\n  background-color: #ffb7a1; /* Hover color matching the active tab */\r\n  padding: 12px 20px; /* Keep the same padding on hover */\r\n}\r\n\r\n\r\n/* Styling for main dashboard content */\r\n.dashboard-content {\r\n  width: 100%;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Active state for Sales link */\r\n.active-nav-link {\r\n  background-color: #ffb7a1; /* Example: matching the hover color */\r\n  padding: 12px 20px;\r\n}\r\n  \r\n  /* Card for the Login Form */\r\n /* Card for the Add Ingredient Form */\r\n.add-ingredient-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 100px; /* Adjust to align the form vertically */\r\n  width: 100%; /* Ensure the container takes the full width */\r\n}\r\n\r\n.card {\r\n  padding: 20px;\r\n  width: 100%; /* Make the card width responsive */\r\n  max-width: 450px; /* Set a max-width for the card */\r\n  background-color: #fffaf0;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Form Group */\r\n/* Form Group */\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column; /* Align label and input vertically */\r\n  margin-bottom: 15px; \r\n}\r\n\r\n/* Label */\r\nlabel {\r\n  font-size: 16px; /* Make labels a bit larger */\r\n  color: #6b4226; /* Same as the text color for consistency */\r\n  margin-bottom: 8px; /* Add some space between label and input */\r\n}\r\n\r\n/* Input and Select */\r\ninput,\r\nselect {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #d1d1d1; /* Light border color */\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.form-group input:focus,\r\n.form-group select:focus {\r\n  outline: none;\r\n  border-color: #f5a8a0; /* Highlight border color when focused */\r\n}\r\n\r\n\r\n/* Quantity Container */\r\n.quantity-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%; /* Ensure the container takes up full width */\r\n}\r\n\r\n.quantity-container input {\r\n  flex: 1; /* Allow the number input to take available space */\r\n  margin-right: 10px; /* Add space between input and select */\r\n}\r\n\r\n.quantity-container select {\r\n  flex: 0 0 auto; /* Make sure the select doesn't expand too much */\r\n  width: 30%; /* Set a fixed width for the select dropdown */\r\n}\r\n\r\n/* Submit Button */\r\nbutton {\r\n  background-color: #f5a8a0; /* Match navbar color */\r\n  color: #6b4226;\r\n  font-size: 16px;\r\n  padding: 12px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  width: 100%; /* Make the button take full width */\r\n  box-sizing: border-box;\r\n  transition: background-color 0.3s ease;\r\n\r\nbutton:hover {\r\n  background-color: #f88377;\r\n}\r\n\r\n/* Error Message */\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n  margin-top: 10px;\r\n}\r\n\r\nfooter {\r\n  text-align: center;\r\n}\r\n\r\n/* General Body Style */\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n\r\n  </style>\r\n  "],"mappings":";AAqGE,OAAOA,KAAI,MAAO,OAAO;AAC3B,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAAE;MACpBC,QAAQ,EAAE,EAAE;MAAE;MACdC,IAAI,EAAE,EAAE;MAAE;MACVC,YAAY,EAAE,EAAE;MAAE;MAClBC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,mBAAmBA,CAAA,EAAG;MAC9B,IAAI,CAACH,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,EAAE;;MAExB;MACA,IAAI,CAAC,IAAI,CAACJ,cAAa,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,IAAI,EAAE;QACxD,IAAI,CAACC,YAAW,GAAI,0BAA0B;QAC9C;MACF;MAEA,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,+CAA+C,EAAE;UACjFV,IAAI,EAAE,IAAI,CAACE,cAAc;UACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,IAAI,EAAE,IAAI,CAACA;QACb,CAAC,CAAC;QAEF,IAAIK,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,yBAAyB,CAAC;QAC9C;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAIA,KAAK,CAACL,QAAO,IAAKK,KAAK,CAACL,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACN,YAAW,GAAI,4BAA4B;QAClD,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,gDAAgD;QACtE;QACAU,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}