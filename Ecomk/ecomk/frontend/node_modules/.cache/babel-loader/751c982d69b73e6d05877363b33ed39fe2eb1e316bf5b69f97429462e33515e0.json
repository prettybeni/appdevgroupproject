{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';\n      this.successMessage = 'Successfully registered!';\n\n      // Validate that all fields are filled\n      if (!this.username || !this.first_name || !this.last_name || !this.email || !this.phone || !this.password || !this.confirmPassword) {\n        this.errorMessage = 'All fields are required!';\n        return;\n      }\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match!';\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.username,\n          first_name: this.first_name,\n          last_name: this.last_name,\n          email: this.email,\n          phone: this.phone,\n          password: this.password\n        });\n\n        // Check if registration was successful\n        if (response.status === 201) {\n          // 201 Created\n          this.$router.push('/');\n        } else {\n          this.errorMessage = 'User already exists';\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","first_name","last_name","email","phone","password","confirmPassword","errorMessage","successMessage","methods","submitForm","response","post","status","$router","push","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-form\">\n    <h2>Register</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"username\">Username</label>\n        <input v-model=\"username\" type=\"text\" id=\"username\" required />\n      </div>\n      <div>\n        <label for=\"first_name\">First Name</label>\n        <input v-model=\"first_name\" type=\"text\" id=\"first_name\" required />\n      </div>\n      <div>\n        <label for=\"last_name\">Last Name</label>\n        <input v-model=\"last_name\" type=\"text\" id=\"last_name\" required />\n      </div>\n      <div>\n        <label for=\"email\">Email</label>\n        <input v-model=\"email\" type=\"email\" id=\"email\" required />\n      </div>\n      <div>\n        <label for=\"phone\">Phone</label>\n        <input v-model=\"phone\" type=\"tel\" id=\"phone\" required />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input v-model=\"password\" type=\"password\" id=\"password\" required />\n      </div>\n      <div>\n        <label for=\"confirmPassword\">Confirm Password</label>\n        <input v-model=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\n      </div>\n      <button type=\"submit\">Register</button>\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n      <p v-if=\"successMessage\" class=\"success\">{{ successMessage }}</p>\n      <div class=\"footer\">\n        <p>Already have an account? <router-link to=\"/\">Log in</router-link></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';\n      this.successMessage = 'Successfully registered!';\n\n      // Validate that all fields are filled\n      if (!this.username || !this.first_name || !this.last_name || !this.email || !this.phone || !this.password || !this.confirmPassword) {\n        this.errorMessage = 'All fields are required!';\n        return;\n      }\n\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match!';\n        return;\n      }\n\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.username,\n          first_name: this.first_name,\n          last_name: this.last_name,\n          email: this.email,\n          phone: this.phone,\n          password: this.password,\n        });\n\n        // Check if registration was successful\n        if (response.status === 201) { // 201 Created\n        this.$router.push('/');\n      } else {\n        this.errorMessage = 'User already exists';\n      }\n      } catch (error) {\n        console.error(error); \n      }\n    },\n  }\n\n};\n</script>\n\n<style>\n.register-form {\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.register-form h2 {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.register-form div {\n  margin-bottom: 15px;\n}\n\n.register-form label {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.register-form input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.register-form button {\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.register-form button:hover {\n  background-color: #0056b3;\n}\n\n.error {\n  color: red;\n}\n\n.success {\n  color: green;\n}\n</style>\n"],"mappings":";AA2CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACH,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,0BAA0B;;MAEhD;MACA,IAAI,CAAC,IAAI,CAACR,QAAO,IAAK,CAAC,IAAI,CAACC,UAAS,IAAK,CAAC,IAAI,CAACC,SAAQ,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,KAAI,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,eAAe,EAAE;QAClI,IAAI,CAACC,YAAW,GAAI,0BAA0B;QAC9C;MACF;MAEA,IAAI,IAAI,CAACF,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,yBAAyB;QAC7C;MACF;MAEA,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAE;UACtEZ,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BC,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACA,IAAIM,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAAE;UAC/B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,IAAI,CAACR,YAAW,GAAI,qBAAqB;QAC3C;MACA,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AAEF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}