{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'PasswordChangeSuccess',\n  methods: {\n    submitNewPassword() {\n      const token = this.$route.query.token; // Get token from query params\n      const newPassword = this.newPassword; // Assuming you have a newPassword data\n\n      fetch('http://localhost:8080/api/reset-password1', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token,\n          newPassword\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.success) {\n          // Redirect to the success page if password reset was successful\n          this.$router.push({\n            name: 'PasswordChangeSuccess'\n          });\n        } else {\n          // Handle error, show message\n          this.errorMessage = data.message || 'An error occurred.';\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n        this.errorMessage = 'An error occurred while resetting your password.';\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","methods","submitNewPassword","token","$route","query","newPassword","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","$router","push","errorMessage","message","catch","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Success.vue"],"sourcesContent":["<template>\r\n    <div class=\"success-page\">\r\n      <div class=\"success-container\">\r\n        <h1>Password Changed Successfully!</h1>\r\n        <p>Your password has been successfully updated. You can now use your new password to log in.</p>\r\n        <router-link to=\"/login\" class=\"btn\">Go to Login</router-link>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'PasswordChangeSuccess',\r\n    methods: {\r\n      submitNewPassword() {\r\n        const token = this.$route.query.token; // Get token from query params\r\n        const newPassword = this.newPassword;  // Assuming you have a newPassword data\r\n  \r\n        fetch('http://localhost:8080/api/reset-password1', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ token, newPassword }),\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            if (data.success) {\r\n              // Redirect to the success page if password reset was successful\r\n              this.$router.push({ name: 'PasswordChangeSuccess' });\r\n            } else {\r\n              // Handle error, show message\r\n              this.errorMessage = data.message || 'An error occurred.';\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('Error:', error);\r\n            this.errorMessage = 'An error occurred while resetting your password.';\r\n          });\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .success-page {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-color: #f7f7f7;\r\n  }\r\n  \r\n  .success-container {\r\n    text-align: center;\r\n    padding: 40px;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    max-width: 400px;\r\n  }\r\n  \r\n  h1 {\r\n    color: #28a745;\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  p {\r\n    color: #555;\r\n    margin: 20px 0;\r\n  }\r\n  \r\n  .btn {\r\n    text-decoration: none;\r\n    background-color: #007bff;\r\n    color: white;\r\n    padding: 10px 20px;\r\n    border-radius: 4px;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .btn:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAWE,eAAe;EACbA,IAAI,EAAE,uBAAuB;EAC7BC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,KAAK,EAAE;MACvC,MAAMG,WAAU,GAAI,IAAI,CAACA,WAAW,EAAG;;MAEvCC,KAAK,CAAC,2CAA2C,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,KAAK;UAAEG;QAAY,CAAC;MAC7C,CAAC,EACEO,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACG,IAAG,IAAK;QACZ,IAAIA,IAAI,CAACC,OAAO,EAAE;UAChB;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEnB,IAAI,EAAE;UAAwB,CAAC,CAAC;QACtD,OAAO;UACL;UACA,IAAI,CAACoB,YAAW,GAAIJ,IAAI,CAACK,OAAM,IAAK,oBAAoB;QAC1D;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACH,YAAW,GAAI,kDAAkD;MACxE,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}