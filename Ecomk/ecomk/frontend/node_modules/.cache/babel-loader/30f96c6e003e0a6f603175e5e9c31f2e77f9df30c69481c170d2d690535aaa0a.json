{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      ingredients: [],\n      // List of ingredients from the API\n      addQuantities: [] // Tracks quantities to add for each ingredient\n    };\n  },\n  methods: {\n    // Fetch ingredients from the API\n    async fetchIngredients() {\n      try {\n        const response = await axios.get('/api/ingredients');\n        this.ingredients = response.data;\n\n        // Initialize addQuantities array\n        this.addQuantities = this.ingredients.map(() => 0);\n      } catch (error) {\n        console.error('Error fetching ingredients:', error);\n      }\n    },\n    // Update ingredient name\n    async editIngredientName(index) {\n      const ingredient = this.ingredients[index];\n      try {\n        await axios.put(`/api/ingredients/${ingredient.id}`, {\n          name: ingredient.name\n        });\n        alert('Ingredient name updated!');\n      } catch (error) {\n        console.error('Error updating ingredient name:', error);\n      }\n    },\n    // Add quantity to the existing ingredient quantity\n    async addQuantity(index) {\n      const ingredient = this.ingredients[index];\n      const addedAmount = this.addQuantities[index];\n      if (addedAmount > 0) {\n        try {\n          await axios.put(`/api/ingredients/${ingredient.id}/add-quantity`, {\n            quantity: addedAmount\n          });\n          // Update local state\n          this.ingredients[index].quantity += addedAmount;\n          this.addQuantities[index] = 0; // Reset input\n          alert('Quantity added successfully!');\n        } catch (error) {\n          console.error('Error adding quantity:', error);\n        }\n      } else {\n        alert('Please enter a valid quantity to add.');\n      }\n    }\n  },\n  mounted() {\n    this.fetchIngredients();\n  }\n};","map":{"version":3,"names":["axios","data","ingredients","addQuantities","methods","fetchIngredients","response","get","map","error","console","editIngredientName","index","ingredient","put","id","name","alert","addQuantity","addedAmount","quantity","mounted"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\manageIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"manage-ingredients\">\r\n      <h1>Manage Ingredients</h1>\r\n  \r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Quantity</th>\r\n            <th>Unit</th>\r\n            <th>Add Quantity</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(ingredient, index) in ingredients\" :key=\"ingredient.id\">\r\n            <td>\r\n              <input \r\n                type=\"text\" \r\n                v-model=\"ingredient.name\" \r\n                @change=\"editIngredientName(index)\" \r\n              />\r\n            </td>\r\n            <td>{{ ingredient.quantity }}</td>\r\n            <td>{{ ingredient.unit }}</td>\r\n            <td>\r\n              <input \r\n                type=\"number\" \r\n                v-model=\"addQuantities[index]\" \r\n                min=\"1\" \r\n                placeholder=\"Add\" \r\n              />\r\n            </td>\r\n            <td>\r\n              <button @click=\"addQuantity(index)\">Add</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        ingredients: [], // List of ingredients from the API\r\n        addQuantities: [], // Tracks quantities to add for each ingredient\r\n      };\r\n    },\r\n    methods: {\r\n      // Fetch ingredients from the API\r\n      async fetchIngredients() {\r\n        try {\r\n          const response = await axios.get('/api/ingredients');\r\n          this.ingredients = response.data;\r\n  \r\n          // Initialize addQuantities array\r\n          this.addQuantities = this.ingredients.map(() => 0);\r\n        } catch (error) {\r\n          console.error('Error fetching ingredients:', error);\r\n        }\r\n      },\r\n  \r\n      // Update ingredient name\r\n      async editIngredientName(index) {\r\n        const ingredient = this.ingredients[index];\r\n        try {\r\n          await axios.put(`/api/ingredients/${ingredient.id}`, { name: ingredient.name });\r\n          alert('Ingredient name updated!');\r\n        } catch (error) {\r\n          console.error('Error updating ingredient name:', error);\r\n        }\r\n      },\r\n  \r\n      // Add quantity to the existing ingredient quantity\r\n      async addQuantity(index) {\r\n        const ingredient = this.ingredients[index];\r\n        const addedAmount = this.addQuantities[index];\r\n  \r\n        if (addedAmount > 0) {\r\n          try {\r\n            await axios.put(`/api/ingredients/${ingredient.id}/add-quantity`, {\r\n              quantity: addedAmount,\r\n            });\r\n            // Update local state\r\n            this.ingredients[index].quantity += addedAmount;\r\n            this.addQuantities[index] = 0; // Reset input\r\n            alert('Quantity added successfully!');\r\n          } catch (error) {\r\n            console.error('Error adding quantity:', error);\r\n          }\r\n        } else {\r\n          alert('Please enter a valid quantity to add.');\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      this.fetchIngredients();\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .manage-ingredients {\r\n    padding: 20px;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    padding: 10px;\r\n    text-align: left;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f4f4f4;\r\n  }\r\n  \r\n  input[type=\"text\"], input[type=\"number\"] {\r\n    width: 90%;\r\n    padding: 5px;\r\n    font-size: 1em;\r\n  }\r\n  \r\n  button {\r\n    padding: 5px 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA2CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MAAE;MACjBC,aAAa,EAAE,EAAE,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAACL,WAAU,GAAII,QAAQ,CAACL,IAAI;;QAEhC;QACA,IAAI,CAACE,aAAY,GAAI,IAAI,CAACD,WAAW,CAACM,GAAG,CAAC,MAAM,CAAC,CAAC;MACpD,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED;IACA,MAAME,kBAAkBA,CAACC,KAAK,EAAE;MAC9B,MAAMC,UAAS,GAAI,IAAI,CAACX,WAAW,CAACU,KAAK,CAAC;MAC1C,IAAI;QACF,MAAMZ,KAAK,CAACc,GAAG,CAAC,oBAAoBD,UAAU,CAACE,EAAE,EAAE,EAAE;UAAEC,IAAI,EAAEH,UAAU,CAACG;QAAK,CAAC,CAAC;QAC/EC,KAAK,CAAC,0BAA0B,CAAC;MACnC,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAED;IACA,MAAMS,WAAWA,CAACN,KAAK,EAAE;MACvB,MAAMC,UAAS,GAAI,IAAI,CAACX,WAAW,CAACU,KAAK,CAAC;MAC1C,MAAMO,WAAU,GAAI,IAAI,CAAChB,aAAa,CAACS,KAAK,CAAC;MAE7C,IAAIO,WAAU,GAAI,CAAC,EAAE;QACnB,IAAI;UACF,MAAMnB,KAAK,CAACc,GAAG,CAAC,oBAAoBD,UAAU,CAACE,EAAE,eAAe,EAAE;YAChEK,QAAQ,EAAED;UACZ,CAAC,CAAC;UACF;UACA,IAAI,CAACjB,WAAW,CAACU,KAAK,CAAC,CAACQ,QAAO,IAAKD,WAAW;UAC/C,IAAI,CAAChB,aAAa,CAACS,KAAK,IAAI,CAAC,EAAE;UAC/BK,KAAK,CAAC,8BAA8B,CAAC;QACvC,EAAE,OAAOR,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF,OAAO;QACLQ,KAAK,CAAC,uCAAuC,CAAC;MAChD;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}