{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      // List of products\n      isLoading: true,\n      // Loading state\n      errorMessage: '' // Error message\n    };\n  },\n  mounted() {\n    this.getProducts();\n  },\n  methods: {\n    async getProducts() {\n      try {\n        // Send GET request to fetch products\n        const response = await axios.get('http://localhost:5000/api/admin/products');\n        // Assign the response data to the products array\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        this.errorMessage = 'Failed to load products. Please try again later.';\n      } finally {\n        // Set loading state to false once data is fetched\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","isLoading","errorMessage","mounted","getProducts","methods","response","get","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Manage.vue"],"sourcesContent":["<template>\r\n  <div class=\"view-products\">\r\n    <h1>Products</h1>\r\n\r\n    <!-- Loading state -->\r\n    <p v-if=\"isLoading\">Loading products...</p>\r\n\r\n    <!-- Error message -->\r\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n\r\n    <!-- Products List -->\r\n    <div v-if=\"products.length > 0\" class=\"products-list\">\r\n      <div v-for=\"product in products\" :key=\"product.id\" class=\"product-item\">\r\n        <img :src=\"product.image_url\" alt=\"Product Image\" class=\"product-image\" />\r\n        <h2>{{ product.name }}</h2>\r\n        <p>Price: ${{ product.price }}</p>\r\n        <p>Category: {{ product.category }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- No products message -->\r\n    <p v-else-if=\"!isLoading && products.length === 0\">No products available.</p>\r\n  </div>\r\n\r\n  <table border=\"1\">\r\n      <tr>\r\n          <th>Image</th>\r\n          <th>Product Name</th>\r\n          <th>Price</th>\r\n          <th>Category</th>\r\n          <th>Stock</th>\r\n      </tr>\r\n      <tr v-for=\"product in products\" :key=\"products.id\">\r\n          <td>{{products.image_url}}</td>\r\n          <td>{{ products.name }}</td>\r\n          <td>{{ products.price }}</td>\r\n          <td>{{ products.category }}</td>\r\n          <td>{{ products.stock }}</td>\r\n      </tr>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // List of products\r\n      isLoading: true, // Loading state\r\n      errorMessage: '', // Error message\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getProducts();\r\n  },\r\n  methods: {\r\n    async getProducts() {\r\n      try {\r\n        // Send GET request to fetch products\r\n        const response = await axios.get('http://localhost:5000/api/admin/products');\r\n        // Assign the response data to the products array\r\n        this.products = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n        this.errorMessage = 'Failed to load products. Please try again later.';\r\n      } finally {\r\n        // Set loading state to false once data is fetched\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.view-products {\r\n  padding: 20px;\r\n}\r\n\r\n.products-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-item {\r\n  border: 1px solid #ccc;\r\n  padding: 15px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 150px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,SAAS,EAAE,IAAI;MAAE;MACjBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;QACA,MAAME,QAAO,GAAI,MAAMR,KAAK,CAACS,GAAG,CAAC,0CAA0C,CAAC;QAC5E;QACA,IAAI,CAACP,QAAO,GAAIM,QAAQ,CAACP,IAAI;MAC/B,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACN,YAAW,GAAI,kDAAkD;MACxE,UAAU;QACR;QACA,IAAI,CAACD,SAAQ,GAAI,KAAK;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}