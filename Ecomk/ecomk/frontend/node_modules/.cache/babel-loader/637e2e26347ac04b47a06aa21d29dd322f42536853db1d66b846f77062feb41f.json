{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      sessionStatus: null,\n      // null: checking, true: session active, false: session not active\n      user: {\n        // Initialize the user object\n        first_name: '',\n        last_name: '',\n        email: '',\n        phone: '',\n        username: ''\n      },\n      token: '',\n      // Store token here\n      errorMessage: ''\n    };\n  },\n  created() {\n    this.getTokenFromUrl();\n  },\n  mounted() {\n    if (this.token) {\n      this.checkSession(this.token); // Use the token to check the session\n    }\n  },\n  methods: {\n    // Extract token from URL\n    getTokenFromUrl() {\n      const urlParams = new URLSearchParams(window.location.search);\n      this.token = urlParams.get('token');\n      console.log('Received token:', this.token);\n    },\n    // Function to check session using the token\n    async checkSession(token) {\n      if (!token) {\n        console.log(\"No token provided\");\n        this.sessionStatus = false;\n        return;\n      }\n      try {\n        // Wait for the response from the API\n        const response = await axios.get('http://localhost:5000/api/user-profile', {\n          params: {\n            token: token\n          },\n          // Send token as a query parameter\n          withCredentials: true\n        });\n\n        // Check if response contains the expected data\n        if (response.data && response.data.user) {\n          // Set session status to active and update user data\n          this.sessionStatus = true;\n          this.user = {\n            ...response.data.user\n          }; // Spread the user data into the user object\n          console.log('User data:', this.user);\n        } else {\n          console.error('No user data found in the response');\n          this.sessionStatus = false;\n        }\n      } catch (error) {\n        console.error('Session not active:', error.response?.data || error);\n        this.sessionStatus = false;\n        this.errorMessage = 'Failed to fetch user data';\n      }\n    },\n    // Logout method\n    logout() {\n      // Clear the token and reset data\n      this.token = '';\n      this.user = {\n        first_name: '',\n        last_name: '',\n        email: '',\n        phone: '',\n        username: ''\n      };\n      // Redirect to the homepage or login page\n      window.location.href = '/';\n    },\n    // Handle edit profile form submission\n    handleEditProfile() {\n      // Implement the logic to save updated user data (e.g., make an API call)\n      console.log('Updated user data:', this.user);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","sessionStatus","user","first_name","last_name","email","phone","username","token","errorMessage","created","getTokenFromUrl","mounted","checkSession","methods","urlParams","URLSearchParams","window","location","search","get","console","log","response","params","withCredentials","error","logout","href","handleEditProfile"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\userProfile.vue"],"sourcesContent":["<template class=\"body\">\r\n  <div id=\"bg\">\r\n    <!-- Container for the profile page -->\r\n    <div class=\"content-wrapper\">\r\n      <!-- Profile image and details on the left side -->\r\n      <div class=\"profile-container\">\r\n        <div class=\"profile-details\">\r\n          <h1>{{ user.first_name }} {{ user.last_name }}</h1>\r\n          <p><strong>Email:</strong> {{ user.email }}</p>\r\n          <p><strong>Phone:</strong> {{ user.phone }}</p>\r\n          <p><strong>Username:</strong> {{ user.username }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Edit profile form on the right side -->\r\n      <div class=\"edit-profile-container\">\r\n        <h1>Edit Profile</h1><br><br>\r\n        <form @submit.prevent=\"handleEditProfile\">\r\n          <div class=\"form-group\">\r\n            <label for=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" v-model=\"user.first_name\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" v-model=\"user.last_name\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">Phone</label>\r\n            <input type=\"text\" id=\"phone\" v-model=\"user.phone\" required />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" id=\"username\" v-model=\"user.username\" required />\r\n          </div>\r\n          <button type=\"submit\">Save Changes</button>\r\n        </form>\r\n        <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sessionStatus: null, // null: checking, true: session active, false: session not active\r\n      user: { // Initialize the user object\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        phone: '',\r\n        username: ''\r\n      },\r\n      token: '', // Store token here\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  created() {\r\n    this.getTokenFromUrl();\r\n  },\r\n  mounted() {\r\n    if (this.token) {\r\n      this.checkSession(this.token); // Use the token to check the session\r\n    }\r\n  },\r\n  methods: {\r\n    // Extract token from URL\r\n    getTokenFromUrl() {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      this.token = urlParams.get('token');\r\n      console.log('Received token:', this.token);\r\n    },\r\n\r\n    // Function to check session using the token\r\n    async checkSession(token) {\r\n      if (!token) {\r\n        console.log(\"No token provided\");\r\n        this.sessionStatus = false;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Wait for the response from the API\r\n        const response = await axios.get('http://localhost:5000/api/user-profile', {\r\n          params: { token: token }, // Send token as a query parameter\r\n          withCredentials: true,\r\n        });\r\n\r\n        // Check if response contains the expected data\r\n        if (response.data && response.data.user) {\r\n          // Set session status to active and update user data\r\n          this.sessionStatus = true;\r\n          this.user = { ...response.data.user }; // Spread the user data into the user object\r\n          console.log('User data:', this.user);\r\n        } else {\r\n          console.error('No user data found in the response');\r\n          this.sessionStatus = false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Session not active:', error.response?.data || error);\r\n        this.sessionStatus = false;\r\n        this.errorMessage = 'Failed to fetch user data';\r\n      }\r\n    },\r\n\r\n    // Logout method\r\n    logout() {\r\n      // Clear the token and reset data\r\n      this.token = '';\r\n      this.user = { first_name: '', last_name: '', email: '', phone: '', username: '' };\r\n      // Redirect to the homepage or login page\r\n      window.location.href = '/';\r\n    },\r\n\r\n    // Handle edit profile form submission\r\n    handleEditProfile() {\r\n      // Implement the logic to save updated user data (e.g., make an API call)\r\n      console.log('Updated user data:', this.user);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  /* Apply background color to the entire page */\r\n  #bg {\r\n    background: linear-gradient(45deg, #D8C4A3, #A3D8C4, #D8A3C4);\r\n    height: 100vh;\r\n    background-size: 600% 600%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation: gradientAnimation 15s ease infinite;\r\n  }\r\n  \r\n  @keyframes gradientAnimation {\r\n    0% { background-position: 0% 50%; }\r\n    50% { background-position: 100% 50%; }\r\n    100% { background-position: 0% 50%; }\r\n  }\r\n  \r\n  /* Container for profile and edit form side by side */\r\n  .content-wrapper {\r\n    display: flex;\r\n    width: 80%;\r\n    max-width: 1200px;\r\n  }\r\n  \r\n  .profile-container {\r\n    flex: 1;\r\n    padding: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  .profile-image {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .profile-details {\r\n    text-align: center;\r\n  }\r\n  \r\n  .profile-details h1 {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n  }\r\n  \r\n  .profile-details p {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .edit-profile-container {\r\n    flex: 1;\r\n    padding: 50px 40px;\r\n    border: 2px solid rgba(255, 255, 255, 0.1);\r\n    background-color: rgba(255, 255, 255, 0.13);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n    border-radius: 10px;\r\n    backdrop-filter: blur(10px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  /* Form styling */\r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  label {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 0 16px;\r\n    height: 50px;\r\n    background-color: rgba(255, 255, 255, 0.07);\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n  }\r\n  \r\n  button {\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    padding: 15px 0;\r\n    background-color: #28a745;\r\n    color: white;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    border-radius: 4px;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #218838;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .footer {\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .footer a {\r\n    color: #007bff;\r\n  }\r\n</style>\r\n"],"mappings":";;;AA+CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MAAE;MACrBC,IAAI,EAAE;QAAE;QACNC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE,EAAE;MAAE;MACXC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACJ,KAAK,EAAE;MACd,IAAI,CAACK,YAAY,CAAC,IAAI,CAACL,KAAK,CAAC,EAAE;IACjC;EACF,CAAC;EACDM,OAAO,EAAE;IACP;IACAH,eAAeA,CAAA,EAAG;MAChB,MAAMI,SAAQ,GAAI,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC7D,IAAI,CAACX,KAAI,GAAIO,SAAS,CAACK,GAAG,CAAC,OAAO,CAAC;MACnCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACd,KAAK,CAAC;IAC5C,CAAC;IAED;IACA,MAAMK,YAAYA,CAACL,KAAK,EAAE;MACxB,IAAI,CAACA,KAAK,EAAE;QACVa,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAACrB,aAAY,GAAI,KAAK;QAC1B;MACF;MAEA,IAAI;QACF;QACA,MAAMsB,QAAO,GAAI,MAAMxB,KAAK,CAACqB,GAAG,CAAC,wCAAwC,EAAE;UACzEI,MAAM,EAAE;YAAEhB,KAAK,EAAEA;UAAM,CAAC;UAAE;UAC1BiB,eAAe,EAAE;QACnB,CAAC,CAAC;;QAEF;QACA,IAAIF,QAAQ,CAACvB,IAAG,IAAKuB,QAAQ,CAACvB,IAAI,CAACE,IAAI,EAAE;UACvC;UACA,IAAI,CAACD,aAAY,GAAI,IAAI;UACzB,IAAI,CAACC,IAAG,GAAI;YAAE,GAAGqB,QAAQ,CAACvB,IAAI,CAACE;UAAK,CAAC,EAAE;UACvCmB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACpB,IAAI,CAAC;QACtC,OAAO;UACLmB,OAAO,CAACK,KAAK,CAAC,oCAAoC,CAAC;UACnD,IAAI,CAACzB,aAAY,GAAI,KAAK;QAC5B;MACF,EAAE,OAAOyB,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,QAAQ,EAAEvB,IAAG,IAAK0B,KAAK,CAAC;QACnE,IAAI,CAACzB,aAAY,GAAI,KAAK;QAC1B,IAAI,CAACQ,YAAW,GAAI,2BAA2B;MACjD;IACF,CAAC;IAED;IACAkB,MAAMA,CAAA,EAAG;MACP;MACA,IAAI,CAACnB,KAAI,GAAI,EAAE;MACf,IAAI,CAACN,IAAG,GAAI;QAAEC,UAAU,EAAE,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;MACjF;MACAU,MAAM,CAACC,QAAQ,CAACU,IAAG,GAAI,GAAG;IAC5B,CAAC;IAED;IACAC,iBAAiBA,CAAA,EAAG;MAClB;MACAR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACpB,IAAI,CAAC;IAC9C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}