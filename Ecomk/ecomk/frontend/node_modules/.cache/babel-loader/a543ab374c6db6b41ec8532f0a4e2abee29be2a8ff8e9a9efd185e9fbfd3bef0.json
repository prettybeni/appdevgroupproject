{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Verifying...\")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.successMessage), 1 /* TEXT */));\n}","map":{"version":3,"names":["key","$data","loading","_createElementBlock","_hoisted_1","error","_hoisted_2","_toDisplayString","_hoisted_3","successMessage"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Verify.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"loading\">Verifying...</div>\r\n  <div v-else-if=\"error\">{{ error }}</div>\r\n  <div v-else>{{ successMessage }}</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      token: this.$route.query.token,  // Grab the token from the URL query\r\n      loading: true,\r\n      successMessage: '',\r\n      error: ''\r\n    };\r\n  },\r\n  created() {\r\n    this.verifyAccount();\r\n  },\r\n  methods: {\r\n    async verifyAccount() {\r\n  try {\r\n    const token = this.$route.query.token;  // Retrieve token from query string\r\n    const response = await axios.get(`http://localhost:5000/api/verify?token=${token}`);\r\n    this.successMessage = response.data.message;\r\n  } catch (err) {\r\n    if (err.response) {\r\n      console.error('Error response:', err.response);  // Log the error response for debugging\r\n      this.error = err.response.data.message;  // Display the error message from the backend\r\n    } else {\r\n      this.error = 'An error occurred';\r\n    }\r\n  }\r\n    }}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* You can add some styles for loading, success, and error messages */\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;SACaC,KAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAAsC,OADxCC,UAAA,EACsB,cAAY,KAChBH,KAAA,CAAAI,KAAK,I,cAArBF,mBAAA,CAAwC,OAF1CG,UAAA,EAAAC,gBAAA,CAE4BN,KAAA,CAAAI,KAAK,qB,cAC/BF,mBAAA,CAAsC,OAHxCK,UAAA,EAAAD,gBAAA,CAGiBN,KAAA,CAAAQ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}