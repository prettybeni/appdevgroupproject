{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"manage-ingredients\"\n};\nconst _hoisted_2 = {\n  border: \"1\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_6 = {\n  class: \"modal-content\"\n};\nconst _hoisted_7 = {\n  class: \"modal-actions\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_9 = {\n  class: \"modal-content\"\n};\nconst _hoisted_10 = {\n  class: \"modal-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"Manage Ingredients\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Quantity\"), _createElementVNode(\"th\", null, \"Unit\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.ingredients, (ingredient, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ingredient.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ingredient.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ingredient.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ingredient.unit), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openEditModal(index)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.openAddStockModal(index)\n    }, \"Add Stock\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Edit Name Modal \"), $data.showEditModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Edit Ingredient Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.modalName = $event),\n    placeholder: \"Enter new name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.modalName]]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.saveNameEdit && $options.saveNameEdit(...args))\n  }, \"Save\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.closeEditModal && $options.closeEditModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add Stock Modal \"), $data.showAddStockModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"h2\", null, \"Add Stock for \" + _toDisplayString($data.selectedIngredient.name), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.modalQuantity = $event),\n    min: \"1\",\n    placeholder: \"Enter quantity to add\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.modalQuantity]]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.addQuantity && $options.addQuantity(...args))\n  }, \"Confirm\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closeAddStockModal && $options.closeAddStockModal(...args))\n  }, \"Cancel\")])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","border","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","ingredients","ingredient","index","id","_toDisplayString","name","quantity","unit","onClick","$event","$options","openEditModal","_hoisted_3","openAddStockModal","_hoisted_4","_createCommentVNode","showEditModal","_hoisted_5","_hoisted_6","type","_cache","modalName","placeholder","_hoisted_7","args","saveNameEdit","closeEditModal","showAddStockModal","_hoisted_8","_hoisted_9","selectedIngredient","modalQuantity","min","_hoisted_10","addQuantity","closeAddStockModal"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\manageIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"manage-ingredients\">\r\n      <h1>Manage Ingredients</h1>\r\n  \r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Quantity</th>\r\n            <th>Unit</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(ingredient, index) in ingredients\" :key=\"ingredient.id\">\r\n            <td>{{ ingredient.name }}</td>\r\n            <td>{{ ingredient.quantity }}</td>\r\n            <td>{{ ingredient.unit }}</td>\r\n            <td>\r\n              <button @click=\"openEditModal(index)\">Edit</button>\r\n              <button @click=\"openAddStockModal(index)\">Add Stock</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <!-- Edit Name Modal -->\r\n      <div v-if=\"showEditModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Edit Ingredient Name</h2>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"modalName\" \r\n            placeholder=\"Enter new name\" \r\n          />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"saveNameEdit\">Save</button>\r\n            <button @click=\"closeEditModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Add Stock Modal -->\r\n      <div v-if=\"showAddStockModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Add Stock for {{ selectedIngredient.name }}</h2>\r\n          <input \r\n            type=\"number\" \r\n            v-model=\"modalQuantity\" \r\n            min=\"1\" \r\n            placeholder=\"Enter quantity to add\" \r\n          />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"addQuantity\">Confirm</button>\r\n            <button @click=\"closeAddStockModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ingredients: [], // List of ingredients from the API\r\n      showEditModal: false, // Controls visibility of the Edit Name modal\r\n      showAddStockModal: false, // Controls visibility of the Add Stock modal\r\n      selectedIngredient: null, // Ingredient selected for any modal\r\n      modalName: '', // Temporary name for editing in the modal\r\n      modalQuantity: 0, // Quantity to add in the Add Stock modal\r\n    };\r\n  },\r\n  methods: {\r\n    // Fetch ingredients from the API\r\n    async fetchIngredients() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/admin/manageIngredients');\r\n        this.ingredients = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching ingredients:', error);\r\n      }\r\n    },\r\n\r\n    // Open the Edit Name modal\r\n    openEditModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalName = this.selectedIngredient.name; // Pre-fill with the current name\r\n      this.showEditModal = true;\r\n    },\r\n\r\n    // Close the Edit Name modal\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalName = '';\r\n    },\r\n\r\n    // Save the edited name\r\n    async saveNameEdit() {\r\n      if (this.modalName.trim() === '') {\r\n        alert('Name cannot be empty.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}`, { name: this.modalName });\r\n        this.selectedIngredient.name = this.modalName; // Update the local state\r\n        alert('Ingredient name updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error updating ingredient name:', error);\r\n      } finally {\r\n        this.closeEditModal();\r\n      }\r\n    },\r\n\r\n    // Open the Add Stock modal\r\n    openAddStockModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalQuantity = 0; // Reset the modal input\r\n      this.showAddStockModal = true;\r\n    },\r\n\r\n    // Close the Add Stock modal\r\n    closeAddStockModal() {\r\n      this.showAddStockModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalQuantity = 0;\r\n    },\r\n\r\n    // Add quantity to the selected ingredient\r\n    async addQuantity() {\r\n      if (this.modalQuantity > 0) {\r\n        try {\r\n          await axios.put(`/api/ingredients/${this.selectedIngredient.id}/add-quantity`, {\r\n            quantity: this.modalQuantity,\r\n          });\r\n          // Update local state\r\n          this.selectedIngredient.quantity += this.modalQuantity;\r\n          alert('Stock added successfully!');\r\n        } catch (error) {\r\n          console.error('Error adding stock:', error);\r\n        } finally {\r\n          this.closeAddStockModal();\r\n        }\r\n      } else {\r\n        alert('Please enter a valid stock quantity.');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchIngredients();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.manage-ingredients {\r\n  padding: 20px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 3px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 20px;\r\n}\r\n\r\n.modal-actions button {\r\n  width: 45%;\r\n}\r\n</style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}