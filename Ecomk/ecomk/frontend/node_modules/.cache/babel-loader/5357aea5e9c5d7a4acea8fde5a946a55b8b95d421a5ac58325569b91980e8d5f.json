{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      ingredients: [],\n      showEditModal: false,\n      showAddStockModal: false,\n      selectedIngredient: null,\n      modalName: '',\n      modalQuantity: 0,\n      isMenuOpen: false,\n      activeDropdown: ''\n    };\n  },\n  methods: {\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen;\n    },\n    toggleDropdown(dropdown) {\n      this.activeDropdown = this.activeDropdown === dropdown ? '' : dropdown;\n    },\n    async fetchIngredients() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/admin/manageIngredients');\n        this.ingredients = response.data;\n      } catch (error) {\n        console.error('Error fetching ingredients:', error);\n      }\n    },\n    openEditModal(index) {\n      this.selectedIngredient = this.ingredients[index];\n      this.modalName = this.selectedIngredient.name;\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.selectedIngredient = null;\n      this.modalName = '';\n    },\n    async saveNameEdit() {\n      if (this.modalName.trim() === '') {\n        alert('Name cannot be empty.');\n        return;\n      }\n      try {\n        await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}`, {\n          name: this.modalName\n        });\n        this.selectedIngredient.name = this.modalName;\n        alert('Ingredient name updated successfully!');\n      } catch (error) {\n        console.error('Error updating ingredient name:', error);\n      } finally {\n        this.closeEditModal();\n      }\n    },\n    openAddStockModal(index) {\n      this.selectedIngredient = this.ingredients[index];\n      this.modalQuantity = 0;\n      this.showAddStockModal = true;\n    },\n    closeAddStockModal() {\n      this.showAddStockModal = false;\n      this.selectedIngredient = null;\n      this.modalQuantity = 0;\n    },\n    async addQuantity() {\n      if (this.modalQuantity > 0) {\n        try {\n          await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}/add-quantity`, {\n            quantity: this.modalQuantity\n          });\n          this.selectedIngredient.quantity += this.modalQuantity;\n          alert('Stock added successfully!');\n        } catch (error) {\n          console.error('Error adding stock:', error);\n        } finally {\n          this.closeAddStockModal();\n        }\n      } else {\n        alert('Please enter a valid stock quantity.');\n      }\n    }\n  },\n  mounted() {\n    this.fetchIngredients();\n  }\n};","map":{"version":3,"names":["axios","data","ingredients","showEditModal","showAddStockModal","selectedIngredient","modalName","modalQuantity","isMenuOpen","activeDropdown","methods","toggleMenu","toggleDropdown","dropdown","fetchIngredients","response","get","error","console","openEditModal","index","name","closeEditModal","saveNameEdit","trim","alert","put","id","openAddStockModal","closeAddStockModal","addQuantity","quantity","mounted"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\manageIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"manage-ingredients\">\r\n      <nav class=\"navbar\">\r\n        <div class=\"hamburger-menu\" @click=\"toggleMenu\">\r\n          <i class=\"fas fa-bars\"></i>\r\n        </div>\r\n        <div class=\"admin-dashboard-text\">Add Ingredient</div>\r\n        <div class=\"nav-links\" :class=\"{ 'active': isMenuOpen }\">\r\n          <router-link to=\"/admin\" class=\"nav-link\" active-class=\"active-nav-link\">Sales</router-link>\r\n          \r\n          <!-- Ingredients Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('ingredients')\" class=\"dropdown-btn\">\r\n              Ingredients\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'ingredients',\r\n                'fas fa-chevron-right': activeDropdown !== 'ingredients'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'ingredients'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addIngredient\" exact-active-class=\"active-nav-link\">Add Ingredients</router-link>\r\n              <router-link to=\"/admin/manageIngredients\">Manage Ingredients</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Products Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('products')\" class=\"dropdown-btn\">\r\n              Products\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'products',\r\n                'fas fa-chevron-right': activeDropdown !== 'products'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'products'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addProd\">Add Products</router-link>\r\n              <router-link to=\"/admin/products\">Manage Products</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Items Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('items')\" class=\"dropdown-btn\">\r\n              Items\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'items',\r\n                'fas fa-chevron-right': activeDropdown !== 'items'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'items'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addItem\">Add Item</router-link>\r\n              <router-link to=\"/admin/manageItems\">Manage Items</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <router-link to=\"/admin/viewUsers\" class=\"nav-link\">Users</router-link>\r\n          <router-link to=\"/admin/viewOrders\" class=\"nav-link\">Order</router-link>\r\n          <router-link to=\"/admin/viewLogs\" class=\"nav-link\">Log</router-link>\r\n          <router-link to=\"/admin/demandPrediction\" class=\"nav-link\">Demand Forecasting</router-link>\r\n          <router-link to=\"/admin/createCashier\" class=\"nav-link\">Create Cashier Account</router-link>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Content Section for Manage Ingredients -->\r\n      <h1>Manage Ingredients</h1>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Quantity</th>\r\n            <th>Unit</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(ingredient, index) in ingredients\" :key=\"ingredient.id\">\r\n            <td>{{ ingredient.name }}</td>\r\n            <td>{{ ingredient.quantity }}</td>\r\n            <td>{{ ingredient.unit }}</td>\r\n            <td>\r\n              <button @click=\"openEditModal(index)\">Edit</button>\r\n              <button @click=\"openAddStockModal(index)\">Add Stock</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      <!-- Modal for Edit Ingredient -->\r\n      <div v-if=\"showEditModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Edit Ingredient Name</h2>\r\n          <input type=\"text\" v-model=\"modalName\" placeholder=\"Enter new name\" />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"saveNameEdit\">Save</button>\r\n            <button @click=\"closeEditModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Modal for Add Stock -->\r\n      <div v-if=\"showAddStockModal\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <h2>Add Stock for {{ selectedIngredient.name }}</h2>\r\n          <input type=\"number\" v-model=\"modalQuantity\" min=\"1\" placeholder=\"Enter quantity to add\" />\r\n          <div class=\"modal-actions\">\r\n            <button @click=\"addQuantity\">Confirm</button>\r\n            <button @click=\"closeAddStockModal\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ingredients: [],\r\n      showEditModal: false,\r\n      showAddStockModal: false,\r\n      selectedIngredient: null,\r\n      modalName: '',\r\n      modalQuantity: 0,\r\n      isMenuOpen: false,\r\n      activeDropdown: '',\r\n    };\r\n  },\r\n  methods: {\r\n    toggleMenu() {\r\n      this.isMenuOpen = !this.isMenuOpen;\r\n    },\r\n    toggleDropdown(dropdown) {\r\n      this.activeDropdown = this.activeDropdown === dropdown ? '' : dropdown;\r\n    },\r\n    async fetchIngredients() {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/admin/manageIngredients');\r\n        this.ingredients = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching ingredients:', error);\r\n      }\r\n    },\r\n    openEditModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalName = this.selectedIngredient.name;\r\n      this.showEditModal = true;\r\n    },\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalName = '';\r\n    },\r\n    async saveNameEdit() {\r\n      if (this.modalName.trim() === '') {\r\n        alert('Name cannot be empty.');\r\n        return;\r\n      }\r\n      try {\r\n        await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}`, { name: this.modalName });\r\n        this.selectedIngredient.name = this.modalName;\r\n        alert('Ingredient name updated successfully!');\r\n      } catch (error) {\r\n        console.error('Error updating ingredient name:', error);\r\n      } finally {\r\n        this.closeEditModal();\r\n      }\r\n    },\r\n    openAddStockModal(index) {\r\n      this.selectedIngredient = this.ingredients[index];\r\n      this.modalQuantity = 0;\r\n      this.showAddStockModal = true;\r\n    },\r\n    closeAddStockModal() {\r\n      this.showAddStockModal = false;\r\n      this.selectedIngredient = null;\r\n      this.modalQuantity = 0;\r\n    },\r\n    async addQuantity() {\r\n      if (this.modalQuantity > 0) {\r\n        try {\r\n          await axios.put(`http://localhost:5000/api/admin/manageIngredients/${this.selectedIngredient.id}/add-quantity`, {\r\n            quantity: this.modalQuantity,\r\n          });\r\n          this.selectedIngredient.quantity += this.modalQuantity;\r\n          alert('Stock added successfully!');\r\n        } catch (error) {\r\n          console.error('Error adding stock:', error);\r\n        } finally {\r\n          this.closeAddStockModal();\r\n        }\r\n      } else {\r\n        alert('Please enter a valid stock quantity.');\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchIngredients();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* General Layout */\r\n.manage-ingredients {\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n}\r\n\r\n.navbar {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #333;\r\n  padding: 10px 20px;\r\n  color: white;\r\n}\r\n\r\n.navbar .hamburger-menu {\r\n  display: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.navbar .admin-dashboard-text {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.navbar .nav-links {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 20px;\r\n}\r\n\r\n.navbar .nav-link {\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 1rem;\r\n}\r\n\r\n.navbar .nav-link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.navbar .nav-dropdown {\r\n  position: relative;\r\n}\r\n\r\n.nav-dropdown .dropdown-btn {\r\n  background-color: transparent;\r\n  color: white;\r\n  border: none;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.nav-dropdown .dropdown-btn i {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.nav-dropdown .dropdown-content {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  background-color: #444;\r\n  display: none;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.nav-dropdown .dropdown-content a {\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 8px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.nav-dropdown .dropdown-content a:hover {\r\n  background-color: #555;\r\n}\r\n\r\n.nav-dropdown .dropdown-content.active {\r\n  display: flex;\r\n}\r\n\r\n.navbar .nav-link.active-nav-link {\r\n  background-color: #555;\r\n  padding: 5px 10px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  width: 300px;\r\n}\r\n\r\n.modal-actions {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\n.modal-actions button {\r\n  padding: 5px 10px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-actions button:hover {\r\n  background-color: #444;\r\n}\r\n\r\n/* Table Styles */\r\ntable {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 10px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #444;\r\n  color: white;\r\n}\r\n\r\ntr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n/* Responsive Adjustments */\r\n@media (max-width: 768px) {\r\n  .navbar .nav-links {\r\n    display: none;\r\n  }\r\n\r\n  .navbar .hamburger-menu {\r\n    display: block;\r\n  }\r\n\r\n  .navbar .nav-links.active {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n\r\n  .navbar .nav-link {\r\n    font-size: 1.2rem;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}