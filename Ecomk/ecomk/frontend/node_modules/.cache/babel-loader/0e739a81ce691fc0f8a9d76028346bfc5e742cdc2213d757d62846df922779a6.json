{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.errorMessage = '';\n      this.successMessage = '';\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match!';\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/register', {\n          username: this.username,\n          first_name: this.first_name,\n          last_name: this.last_name,\n          email: this.email,\n          phone: this.phone,\n          password: this.password\n        });\n        if (response.data.success) {\n          this.successMessage = 'Registration successful! Please verify your email.';\n          this.resetForm();\n        }\n      } catch (error) {\n        console.error(error); // Log the full error response to the console\n        this.errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\n      }\n    },\n    resetForm() {\n      this.username = '';\n      this.first_name = '';\n      this.last_name = '';\n      this.email = '';\n      this.phone = '';\n      this.password = '';\n      this.confirmPassword = '';\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","first_name","last_name","email","phone","password","confirmPassword","errorMessage","successMessage","methods","submitForm","response","post","success","resetForm","error","console","message"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"register-form\">\n    <h2>Register</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"username\">Username</label>\n        <input v-model=\"username\" type=\"text\" id=\"username\" required />\n      </div>\n      <div>\n        <label for=\"first_name\">First Name</label>\n        <input v-model=\"first_name\" type=\"text\" id=\"first_name\" required />\n      </div>\n      <div>\n        <label for=\"last_name\">Last Name</label>\n        <input v-model=\"last_name\" type=\"text\" id=\"last_name\" required />\n      </div>\n      <div>\n        <label for=\"email\">Email</label>\n        <input v-model=\"email\" type=\"email\" id=\"email\" required />\n      </div>\n      <div>\n        <label for=\"phone\">Phone</label>\n        <input v-model=\"phone\" type=\"tel\" id=\"phone\" required />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input v-model=\"password\" type=\"password\" id=\"password\" required />\n      </div>\n      <div>\n        <label for=\"confirmPassword\">Confirm Password</label>\n        <input v-model=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\n      </div>\n      <button type=\"submit\">Register</button>\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n      <p v-if=\"successMessage\" class=\"success\">{{ successMessage }}</p>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n  this.errorMessage = '';\n  this.successMessage = '';\n\n  if (this.password !== this.confirmPassword) {\n    this.errorMessage = 'Passwords do not match!';\n    return;\n  }\n\n  try {\n    const response = await axios.post('http://localhost:5000/api/register', {\n      username: this.username,\n      first_name: this.first_name,\n      last_name: this.last_name,\n      email: this.email,\n      phone: this.phone,\n      password: this.password,\n    });\n\n    if (response.data.success) {\n      this.successMessage = 'Registration successful! Please verify your email.';\n      this.resetForm();\n    }\n  } catch (error) {\n    console.error(error);  // Log the full error response to the console\n    this.errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\n  }\n},\n\n    resetForm() {\n      this.username = '';\n      this.first_name = '';\n      this.last_name = '';\n      this.email = '';\n      this.phone = '';\n      this.password = '';\n      this.confirmPassword = '';\n    },\n  },\n};\n</script>\n\n<style>\n/* Add some styling */\n.error {\n  color: red;\n}\n.success {\n  color: green;\n}\n</style>\n"],"mappings":"AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACrB,IAAI,CAACH,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,EAAE;MAExB,IAAI,IAAI,CAACH,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,YAAW,GAAI,yBAAyB;QAC7C;MACF;MAEA,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMb,KAAK,CAACc,IAAI,CAAC,oCAAoC,EAAE;UACtEZ,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,UAAU,EAAE,IAAI,CAACA,UAAU;UAC3BC,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAIM,QAAQ,CAACZ,IAAI,CAACc,OAAO,EAAE;UACzB,IAAI,CAACL,cAAa,GAAI,oDAAoD;UAC1E,IAAI,CAACM,SAAS,CAAC,CAAC;QAClB;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,EAAG;QACvB,IAAI,CAACR,YAAW,GAAIQ,KAAK,CAACJ,QAAQ,EAAEZ,IAAI,EAAEkB,OAAM,IAAK,wCAAwC;MAC/F;IACF,CAAC;IAEGH,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,UAAS,GAAI,EAAE;MACpB,IAAI,CAACC,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,eAAc,GAAI,EAAE;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}