{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'AddProduct',\n  data() {\n    return {\n      product: {\n        name: '',\n        price: '',\n        category: ''\n      },\n      productImage: null // Holds the selected image file\n    };\n  },\n  methods: {\n    handleImageUpload(event) {\n      this.productImage = event.target.files[0]; // Store the selected image file\n    },\n    async addProduct() {\n      try {\n        // Create FormData and append each product detail\n        const formData = new FormData();\n        formData.append('name', this.product.name);\n        formData.append('price', this.product.price);\n        formData.append('category', this.product.category);\n        formData.append('image', this.productImage); // Add the image file\n\n        const response = await fetch('http://localhost:5000/admin/add', {\n          method: 'POST',\n          body: formData // Send form data\n        });\n        if (response.ok) {\n          alert('Product added successfully');\n          this.$router.push('/admin'); // Redirect back to the admin dashboard\n        } else {\n          alert('Failed to add product');\n        }\n      } catch (error) {\n        console.error('Error adding product:', error);\n        alert('An error occurred while adding the product');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","product","price","category","productImage","methods","handleImageUpload","event","target","files","addProduct","formData","FormData","append","response","fetch","method","body","ok","alert","$router","push","error","console"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Add.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-product\">\r\n      <h1>Add New Product</h1>\r\n      <form @submit.prevent=\"addProduct\">\r\n        <div>\r\n          <label for=\"productName\">Product Name</label>\r\n          <input type=\"text\" id=\"productName\" v-model=\"product.name\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"productPrice\">Price</label>\r\n          <input type=\"number\" id=\"productPrice\" v-model=\"product.price\" required />\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"productCategory\">Category</label>\r\n          <input type=\"text\" id=\"productCategory\" v-model=\"product.category\" required />\r\n        </div>\r\n  \r\n\r\n  \r\n        <div>\r\n          <label for=\"productImage\">Product Image</label>\r\n          <input type=\"file\" id=\"productImage\" @change=\"handleImageUpload\" accept=\"image/*\" required />\r\n        </div>\r\n  \r\n        <button type=\"submit\">Add Product</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'AddProduct',\r\n  data() {\r\n    return {\r\n      product: {\r\n        name: '',\r\n        price: '',\r\n        category: '',\r\n        \r\n      },\r\n      productImage: null // Holds the selected image file\r\n    };\r\n  },\r\n  methods: {\r\n    handleImageUpload(event) {\r\n      this.productImage = event.target.files[0]; // Store the selected image file\r\n    },\r\n    async addProduct() {\r\n    try {\r\n      // Create FormData and append each product detail\r\n      const formData = new FormData();\r\n      formData.append('name', this.product.name);\r\n      formData.append('price', this.product.price);\r\n      formData.append('category', this.product.category);\r\n    \r\n      formData.append('image', this.productImage); // Add the image file\r\n\r\n      const response = await fetch('http://localhost:5000/admin/add', {\r\n        method: 'POST',\r\n        body: formData // Send form data\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Product added successfully');\r\n        this.$router.push('/admin'); // Redirect back to the admin dashboard\r\n      } else {\r\n        alert('Failed to add product');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n      alert('An error occurred while adding the product');\r\n    }\r\n  }\r\n\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n  .add-product {\r\n    padding: 20px;\r\n  }\r\n  \r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n  }\r\n  \r\n  input, textarea {\r\n    padding: 10px;\r\n    margin-top: 5px;\r\n    width: 100%;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>"],"mappings":";AAgCA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPF,IAAI,EAAE,EAAE;QACRG,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MAEZ,CAAC;MACDC,YAAY,EAAE,IAAG,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,KAAK,EAAE;MACvB,IAAI,CAACH,YAAW,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;IAC7C,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACnB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACZ,OAAO,CAACF,IAAI,CAAC;QAC1CY,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACZ,OAAO,CAACC,KAAK,CAAC;QAC5CS,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACZ,OAAO,CAACE,QAAQ,CAAC;QAElDQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,YAAY,CAAC,EAAE;;QAE7C,MAAMU,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAC9DC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN,QAAO,CAAE;QACjB,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACfC,KAAK,CAAC,4BAA4B,CAAC;UACnC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;QAC/B,OAAO;UACLF,KAAK,CAAC,uBAAuB,CAAC;QAChC;MACF,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CH,KAAK,CAAC,4CAA4C,CAAC;MACrD;IACF;EAEA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}