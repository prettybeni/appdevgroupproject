{"ast":null,"code":"export default {\n  name: 'AddIngredient',\n  data() {\n    return {\n      isMenuOpen: false,\n      // Track menu open/close state\n      activeDropdown: null,\n      // Track active dropdown\n      ingredientName: '',\n      ingredientDescription: '',\n      ingredientPrice: '',\n      ingredientStock: '',\n      ingredientImage: null\n    };\n  },\n  methods: {\n    toggleMenu() {\n      this.isMenuOpen = !this.isMenuOpen; // Toggle menu visibility\n    },\n    toggleDropdown(dropdown) {\n      // Close the dropdown if it's already open; otherwise, open it\n      if (this.activeDropdown === dropdown) {\n        this.activeDropdown = null; // Close if it's already open\n      } else {\n        this.activeDropdown = dropdown; // Open the clicked dropdown\n      }\n    },\n    handleFileUpload(event) {\n      this.ingredientImage = event.target.files[0];\n    },\n    submitForm() {\n      // Logic to handle form submission, e.g., sending data to an API\n      const formData = new FormData();\n      formData.append('ingredientName', this.ingredientName);\n      formData.append('ingredientDescription', this.ingredientDescription);\n      formData.append('ingredientPrice', this.ingredientPrice);\n      formData.append('ingredientStock', this.ingredientStock);\n      if (this.ingredientImage) {\n        formData.append('ingredientImage', this.ingredientImage);\n      }\n\n      // Make API call to save ingredient (example using axios)\n      // axios.post('/api/add-ingredient', formData)\n      //   .then(response => {\n      //     console.log(response.data);\n      //   })\n      //   .catch(error => {\n      //     console.error(error);\n      //   });\n    }\n  }\n};","map":{"version":3,"names":["name","data","isMenuOpen","activeDropdown","ingredientName","ingredientDescription","ingredientPrice","ingredientStock","ingredientImage","methods","toggleMenu","toggleDropdown","dropdown","handleFileUpload","event","target","files","submitForm","formData","FormData","append"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\addIngredient.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-dashboard\">\r\n      <!-- Navigation Bar -->\r\n      <nav class=\"navbar\">\r\n        <!-- Hamburger Menu (on the left) -->\r\n        <div class=\"hamburger-menu\" @click=\"toggleMenu\">\r\n          <i class=\"fas fa-bars\"></i> <!-- Font Awesome Hamburger Icon -->\r\n        </div>\r\n  \r\n        <!-- Admin Dashboard Text -->\r\n        <div class=\"admin-dashboard-text\">\r\n          Add Ingredient\r\n        </div>\r\n  \r\n        <!-- Navigation Links -->\r\n        <div class=\"nav-links\" :class=\"{ 'active': isMenuOpen }\">\r\n          <!-- Sales Button (added at the top of the dropdown) -->\r\n          <router-link to=\"/admin\" class=\"nav-link\" active-class=\"active-nav-link\">Sales</router-link>\r\n  \r\n          <!-- Ingredients Group -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('ingredients')\" class=\"dropdown-btn\">\r\n              Ingredients\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'ingredients',\r\n                'fas fa-chevron-right': activeDropdown !== 'ingredients'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'ingredients'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addIngredient\" exact-active-class=\"active-nav-link\">Add Ingredients</router-link>\r\n              <router-link to=\"/admin/manageIngredients\">Manage Ingredients</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Products Dropdown -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('products')\" class=\"dropdown-btn\">\r\n              Products\r\n              <i :class=\"{\r\n                'fas fa-chevron-down': activeDropdown === 'products',\r\n                'fas fa-chevron-right': activeDropdown !== 'products'\r\n              }\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'products'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addProd\">Add Products</router-link>\r\n              <router-link to=\"/admin/products\">Manage Products</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Items Group -->\r\n          <div class=\"nav-dropdown\">\r\n            <button @click=\"toggleDropdown('items')\" class=\"dropdown-btn\">\r\n              Items\r\n              <i :class=\"{'fas fa-chevron-down': activeDropdown === 'items', 'fas fa-chevron-right': activeDropdown !== 'items'}\" class=\"dropdown-indicator\"></i>\r\n            </button>\r\n            <div v-if=\"activeDropdown === 'items'\" class=\"dropdown-content\">\r\n              <router-link to=\"/admin/addItem\">Add Item</router-link>\r\n              <router-link to=\"/admin/manageItems\">Manage Items</router-link>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Other Links -->\r\n          <router-link to=\"/admin/viewUsers\" class=\"nav-link\">Users</router-link>\r\n          <router-link to=\"/admin/viewOrders\" class=\"nav-link\">Order</router-link>\r\n          <router-link to=\"/admin/viewLogs\" class=\"nav-link\">Log</router-link>\r\n          <router-link to=\"/admin/demandPrediction\" class=\"nav-link\">Demand Forecasting</router-link>\r\n          <router-link to=\"/admin/createCashier\" class=\"nav-link\">Create Cashier Account</router-link>\r\n        </div>\r\n      </nav>\r\n  \r\n      <!-- Dashboard Content -->\r\n      <div class=\"dashboard-content\">\r\n        <h2>Add a New Ingredient</h2>\r\n  \r\n        <!-- Add Ingredient Form Card -->\r\n        <div class=\"card\">\r\n          <form @submit.prevent=\"submitForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"ingredientName\">Ingredient Name:</label>\r\n              <input type=\"text\" id=\"ingredientName\" v-model=\"ingredientName\" required />\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"ingredientDescription\">Description:</label>\r\n              <textarea id=\"ingredientDescription\" v-model=\"ingredientDescription\" required></textarea>\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"ingredientPrice\">Price:</label>\r\n              <input type=\"number\" id=\"ingredientPrice\" v-model=\"ingredientPrice\" required />\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"ingredientStock\">Stock Quantity:</label>\r\n              <input type=\"number\" id=\"ingredientStock\" v-model=\"ingredientStock\" required />\r\n            </div>\r\n  \r\n            <div class=\"form-group\">\r\n              <label for=\"ingredientImage\">Upload Image:</label>\r\n              <input type=\"file\" id=\"ingredientImage\" @change=\"handleFileUpload\" />\r\n            </div>\r\n  \r\n            <button type=\"submit\" class=\"btn-submit\">Add Ingredient</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'AddIngredient',\r\n    data() {\r\n      return {\r\n        isMenuOpen: false, // Track menu open/close state\r\n        activeDropdown: null, // Track active dropdown\r\n        ingredientName: '',\r\n        ingredientDescription: '',\r\n        ingredientPrice: '',\r\n        ingredientStock: '',\r\n        ingredientImage: null,\r\n      };\r\n    },\r\n    methods: {\r\n      toggleMenu() {\r\n        this.isMenuOpen = !this.isMenuOpen; // Toggle menu visibility\r\n      },\r\n      toggleDropdown(dropdown) {\r\n        // Close the dropdown if it's already open; otherwise, open it\r\n        if (this.activeDropdown === dropdown) {\r\n          this.activeDropdown = null; // Close if it's already open\r\n        } else {\r\n          this.activeDropdown = dropdown; // Open the clicked dropdown\r\n        }\r\n      },\r\n      handleFileUpload(event) {\r\n        this.ingredientImage = event.target.files[0];\r\n      },\r\n      submitForm() {\r\n        // Logic to handle form submission, e.g., sending data to an API\r\n        const formData = new FormData();\r\n        formData.append('ingredientName', this.ingredientName);\r\n        formData.append('ingredientDescription', this.ingredientDescription);\r\n        formData.append('ingredientPrice', this.ingredientPrice);\r\n        formData.append('ingredientStock', this.ingredientStock);\r\n        if (this.ingredientImage) {\r\n          formData.append('ingredientImage', this.ingredientImage);\r\n        }\r\n  \r\n        // Make API call to save ingredient (example using axios)\r\n        // axios.post('/api/add-ingredient', formData)\r\n        //   .then(response => {\r\n        //     console.log(response.data);\r\n        //   })\r\n        //   .catch(error => {\r\n        //     console.error(error);\r\n        //   });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Card Style */\r\n  .card {\r\n    background-color: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .form-group label {\r\n    font-weight: bold;\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .form-group input,\r\n  .form-group textarea {\r\n    width: 100%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  .form-group textarea {\r\n    resize: vertical;\r\n    height: 100px;\r\n  }\r\n  \r\n  .btn-submit {\r\n    background-color: #f5a8a0;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .btn-submit:hover {\r\n    background-color: #ffb7a1;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA8GE,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MAAE;MACnBC,cAAc,EAAE,IAAI;MAAE;MACtBC,cAAc,EAAE,EAAE;MAClBC,qBAAqB,EAAE,EAAE;MACzBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACR,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU,EAAE;IACtC,CAAC;IACDS,cAAcA,CAACC,QAAQ,EAAE;MACvB;MACA,IAAI,IAAI,CAACT,cAAa,KAAMS,QAAQ,EAAE;QACpC,IAAI,CAACT,cAAa,GAAI,IAAI,EAAE;MAC9B,OAAO;QACL,IAAI,CAACA,cAAa,GAAIS,QAAQ,EAAE;MAClC;IACF,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACN,eAAc,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX;MACA,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAChB,cAAc,CAAC;MACtDc,QAAQ,CAACE,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAACf,qBAAqB,CAAC;MACpEa,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACd,eAAe,CAAC;MACxDY,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACb,eAAe,CAAC;MACxD,IAAI,IAAI,CAACC,eAAe,EAAE;QACxBU,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACZ,eAAe,CAAC;MAC1D;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}