{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      usernameOrEmail: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = ''; // Reset error message\n\n      const loginUrl = 'http://localhost:5000/api';\n      try {\n        const response = await fetch(loginUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            usernameOrEmail: this.usernameOrEmail,\n            password: this.password\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          this.errorMessage = errorData.message || 'Login failed. Please try again.';\n          return;\n        }\n        const data = await response.json();\n        console.log('Login successful:', data);\n        if (data.success) {\n          if (data.redirectUrl) {\n            this.$router.push(data.redirectUrl);\n          } else {\n            this.errorMessage = 'Role not recognized or missing redirect URL.';\n          }\n        } else {\n          this.errorMessage = 'Login failed. Please try again.';\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        this.errorMessage = 'An error occurred. Please try again later.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","usernameOrEmail","password","errorMessage","methods","handleLogin","loginUrl","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","console","log","success","redirectUrl","$router","push","error"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h1 class=\"header\">Lebrew Foodhouse</h1>\n    <h2>Login</h2>\n    <form @submit.prevent=\"handleLogin\">\n      <div class=\"form-group\">\n        <div class=\"input-icon\">\n          <i class=\"fas fa-user\"></i>\n          <input\n            v-model=\"usernameOrEmail\"\n            type=\"text\"\n            id=\"usernameOrEmail\"\n            placeholder=\"Username or Email\"\n            required\n          />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"input-icon\">\n          <i class=\"fas fa-lock\"></i>\n          <input\n            v-model=\"password\"\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            required\n          />\n          <i class=\"fas fa-eye password-toggle\"></i>\n        </div>\n      </div>\n      <div class=\"checkbox-container\">\n        <label>Keep me logged in</label>\n        <input type=\"checkbox\" class=\"toggle-switch\" />\n      </div>\n      <button type=\"submit\" class=\"login-btn\">Log in</button>\n      <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n      <div class=\"footer\">\n        <p>Don't have an account? <router-link to=\"/register\">Register here</router-link></p>\n        <p><router-link to=\"/reset-password\">Forgot your password?</router-link></p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      usernameOrEmail: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = ''; // Reset error message\n\n      const loginUrl = 'http://localhost:5000/api';\n\n      try {\n        const response = await fetch(loginUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            usernameOrEmail: this.usernameOrEmail,\n            password: this.password\n          }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          this.errorMessage = errorData.message || 'Login failed. Please try again.';\n          return;\n        }\n\n        const data = await response.json();\n        console.log('Login successful:', data);\n\n        if (data.success) {\n          if (data.redirectUrl) {\n            this.$router.push(data.redirectUrl);\n          } else {\n            this.errorMessage = 'Role not recognized or missing redirect URL.';\n          }\n        } else {\n          this.errorMessage = 'Login failed. Please try again.';\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        this.errorMessage = 'An error occurred. Please try again later.';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css');\n\n.login-container {\n  background-color: #f8d7da;\n  border-radius: 12px;\n  padding: 20px;\n  width: 320px;\n  margin: 50px auto;\n  box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n.header {\n  font-family: 'Georgia', serif;\n  color: #6f3c3c;\n  font-size: 1.8em;\n  margin-bottom: 20px;\n}\n\nh2 {\n  font-weight: bold;\n  font-size: 1.2em;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n  position: relative;\n}\n\n.input-icon {\n  display: flex;\n  align-items: center;\n  background-color: #fff;\n  padding: 8px;\n  border-radius: 6px;\n}\n\n.input-icon i {\n  margin: 0 10px;\n  color: #6f3c3c;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\n  border: none;\n  padding: 8px;\n  outline: none;\n  width: 100%;\n}\n\n.password-toggle {\n  cursor: pointer;\n  margin-left: auto;\n  color: #6f3c3c;\n}\n\n.checkbox-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.toggle-switch {\n  appearance: none;\n  -webkit-appearance: none;\n  width: 36px;\n  height: 18px;\n  background-color: #ccc;\n  border-radius: 18px;\n  margin-left: 10px;\n  position: relative;\n  cursor: pointer;\n}\n\n.toggle-switch:checked {\n  background-color: #4caf50;\n}\n\n.toggle-switch:checked::after {\n  left: 18px;\n}\n\n.toggle-switch::after {\n  content: '';\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 14px;\n  height: 14px;\n  background-color: white;\n  border-radius: 50%;\n  transition: left 0.3s;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 0.75rem;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  font-size: 1rem;\n  cursor: pointer;\n  border-radius: 6px;\n  margin-bottom: 10px;\n}\n\n.login-btn:hover {\n  background-color: #0056b3;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n}\n\n.footer {\n  margin-top: 20px;\n}\n\n.footer p {\n  font-size: 0.9em;\n  color: #555;\n}\n</style>\n"],"mappings":";AA6CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAE,EAAE;;MAExB,MAAMG,QAAO,GAAI,2BAA2B;MAE5C,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,QAAQ,EAAE;UACrCG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBZ,eAAe,EAAE,IAAI,CAACA,eAAe;YACrCC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAMC,SAAQ,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UACvC,IAAI,CAACb,YAAW,GAAIY,SAAS,CAACE,OAAM,IAAK,iCAAiC;UAC1E;QACF;QAEA,MAAMjB,IAAG,GAAI,MAAMO,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEnB,IAAI,CAAC;QAEtC,IAAIA,IAAI,CAACoB,OAAO,EAAE;UAChB,IAAIpB,IAAI,CAACqB,WAAW,EAAE;YACpB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACvB,IAAI,CAACqB,WAAW,CAAC;UACrC,OAAO;YACL,IAAI,CAAClB,YAAW,GAAI,8CAA8C;UACpE;QACF,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,iCAAiC;QACvD;MACF,EAAE,OAAOqB,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACrB,YAAW,GAAI,4CAA4C;MAClE;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}