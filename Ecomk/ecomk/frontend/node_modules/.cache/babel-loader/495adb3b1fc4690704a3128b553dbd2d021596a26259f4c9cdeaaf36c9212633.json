{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      product: {},\n      // Store product details\n      quantity: 1,\n      size: '',\n      selectedAddons: [],\n      note: ''\n    };\n  },\n  mounted() {\n    const productId = this.$route.params.productId;\n    console.log('Product ID:', productId); // Check if the productId is correct\n    this.fetchProductDetails(productId);\n  },\n  methods: {\n    async fetchProductDetails(productId) {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/product/${productId}`);\n        console.log(response.data); // Check the structure of the returned data\n        this.product = response.data;\n        this.size = this.product.sizes ? this.product.sizes[0] : ''; // Set default size if available\n      } catch (error) {\n        console.error('Error fetching product details:', error);\n        // Optionally handle the error by displaying a message in the UI\n      }\n    },\n    async addToCart() {\n      const cartItem = {\n        productId: this.product.id,\n        quantity: this.quantity,\n        size: this.size,\n        addons: this.selectedAddons,\n        note: this.note\n      };\n\n      // Call your API to add the item to the cart\n      try {\n        await axios.post('/api/cart', cartItem);\n        this.$router.push('/cart'); // Redirect to cart page after adding the item\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n        // Optionally handle the error by displaying a message in the UI\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","product","quantity","size","selectedAddons","note","mounted","productId","$route","params","console","log","fetchProductDetails","methods","response","get","sizes","error","addToCart","cartItem","id","addons","post","$router","push"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n    <div class=\"product-detail\">\r\n        <h1>{{ product.name || 'Loading...' }}</h1>\r\n  \r\n      <div class=\"product-image\">\r\n        <img :src=\"`http://localhost:5000${product.image_url}`\" :alt=\"product.name\" />\r\n      </div>\r\n  \r\n      <div class=\"product-info\">\r\n        <p>Price: P{{ product.price }}</p>\r\n  \r\n        <!-- Quantity selection -->\r\n        <div class=\"quantity\" v-if=\"product.available\">\r\n          <label for=\"quantity\">Quantity:</label>\r\n          <input type=\"number\" id=\"quantity\" v-model=\"quantity\" min=\"1\" />\r\n        </div>\r\n  \r\n        <!-- Size selection -->\r\n        <div class=\"size\" v-if=\"product.sizes && product.sizes.length\">\r\n          <label for=\"size\">Size:</label>\r\n          <select v-model=\"size\" id=\"size\">\r\n            <option v-for=\"(size, index) in product.sizes\" :key=\"index\" :value=\"size\">{{ size }}</option>\r\n          </select>\r\n        </div>\r\n  \r\n        <!-- Add-ons selection -->\r\n        <div class=\"addons\" v-if=\"product.addons && product.addons.length\">\r\n          <label>Add-ons:</label>\r\n          <div v-for=\"(addon, index) in product.addons\" :key=\"index\">\r\n            <input type=\"checkbox\" :id=\"addon\" v-model=\"selectedAddons\" :value=\"addon\" />\r\n            <label :for=\"addon\">{{ addon }}</label>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Note input -->\r\n        <div class=\"note\">\r\n          <label for=\"note\">Note:</label>\r\n          <textarea v-model=\"note\" id=\"note\" placeholder=\"Add a note for the seller\"></textarea>\r\n        </div>\r\n  \r\n        <!-- Add to Cart Button -->\r\n        <button @click=\"addToCart\">Add to Cart</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        product: {}, // Store product details\r\n        quantity: 1,\r\n        size: '',\r\n        selectedAddons: [],\r\n        note: '',\r\n      };\r\n    },\r\n    mounted() {\r\n      const productId = this.$route.params.productId;\r\n      console.log('Product ID:', productId); // Check if the productId is correct\r\n      this.fetchProductDetails(productId);\r\n    },\r\n    methods: {\r\n        async fetchProductDetails(productId) {\r\n  try {\r\n    const response = await axios.get(`http://localhost:5000/api/product/${productId}`);\r\n    console.log(response.data); // Check the structure of the returned data\r\n    this.product = response.data;\r\n    this.size = this.product.sizes ? this.product.sizes[0] : ''; // Set default size if available\r\n  } catch (error) {\r\n    console.error('Error fetching product details:', error);\r\n    // Optionally handle the error by displaying a message in the UI\r\n  }\r\n},\r\n      async addToCart() {\r\n        const cartItem = {\r\n          productId: this.product.id,\r\n          quantity: this.quantity,\r\n          size: this.size,\r\n          addons: this.selectedAddons,\r\n          note: this.note,\r\n        };\r\n  \r\n        // Call your API to add the item to the cart\r\n        try {\r\n          await axios.post('/api/cart', cartItem);\r\n          this.$router.push('/cart'); // Redirect to cart page after adding the item\r\n        } catch (error) {\r\n          console.error('Error adding to cart:', error);\r\n          // Optionally handle the error by displaying a message in the UI\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-detail {\r\n    padding: 20px;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  .product-info {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .product-info p {\r\n    font-size: 1.2em;\r\n  }\r\n  \r\n  .product-info .quantity,\r\n  .product-info .size,\r\n  .product-info .addons,\r\n  .product-info .note {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  button {\r\n    background-color: #ffb7a1;\r\n    padding: 10px 20px;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #f28268;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA+CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAE,EAAE;MACRC,cAAc,EAAE,EAAE;MAClBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,SAAS;IAC9CG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,SAAS,CAAC,EAAE;IACvC,IAAI,CAACK,mBAAmB,CAACL,SAAS,CAAC;EACrC,CAAC;EACDM,OAAO,EAAE;IACL,MAAMD,mBAAmBA,CAACL,SAAS,EAAE;MAC3C,IAAI;QACF,MAAMO,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,qCAAqCR,SAAS,EAAE,CAAC;QAClFG,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACd,IAAI,CAAC,EAAE;QAC5B,IAAI,CAACC,OAAM,GAAIa,QAAQ,CAACd,IAAI;QAC5B,IAAI,CAACG,IAAG,GAAI,IAAI,CAACF,OAAO,CAACe,KAAI,GAAI,IAAI,CAACf,OAAO,CAACe,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;MAC/D,EAAE,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD;MACF;IACF,CAAC;IACK,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMC,QAAO,GAAI;QACfZ,SAAS,EAAE,IAAI,CAACN,OAAO,CAACmB,EAAE;QAC1BlB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfkB,MAAM,EAAE,IAAI,CAACjB,cAAc;QAC3BC,IAAI,EAAE,IAAI,CAACA;MACb,CAAC;;MAED;MACA,IAAI;QACF,MAAMN,KAAK,CAACuB,IAAI,CAAC,WAAW,EAAEH,QAAQ,CAAC;QACvC,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC,EAAE;MAC9B,EAAE,OAAOP,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}