{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-form\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[16] || (_cache[16] = _createElementVNode(\"h2\", null, \"Register\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.submitForm && $options.submitForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    type: \"text\",\n    id: \"username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"firstName\"\n  }, \"First Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.firstName = $event),\n    type: \"text\",\n    id: \"firstName\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.firstName]])]), _createElementVNode(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"lastName\"\n  }, \"Last Name\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.lastName = $event),\n    type: \"text\",\n    id: \"lastName\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lastName]])]), _createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.email = $event),\n    type: \"email\",\n    id: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"Phone\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.phone = $event),\n    type: \"tel\",\n    id: \"phone\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phone]])]), _createElementVNode(\"div\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirm Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.confirmPassword = $event),\n    type: \"password\",\n    id: \"confirmPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _cache[15] || (_cache[15] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Register\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitForm","for","$event","$data","username","type","id","required","firstName","lastName","email","phone","password","confirmPassword","errorMessage","_hoisted_2","_toDisplayString","_createCommentVNode","successMessage","_hoisted_3"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"register-form\">\n    <h2>Register</h2>\n    <form @submit.prevent=\"submitForm\">\n      <div>\n        <label for=\"username\">Username</label>\n        <input v-model=\"username\" type=\"text\" id=\"username\" required />\n      </div>\n      <div>\n        <label for=\"firstName\">First Name</label>\n        <input v-model=\"firstName\" type=\"text\" id=\"firstName\" required />\n      </div>\n      <div>\n        <label for=\"lastName\">Last Name</label>\n        <input v-model=\"lastName\" type=\"text\" id=\"lastName\" required />\n      </div>\n      <div>\n        <label for=\"email\">Email</label>\n        <input v-model=\"email\" type=\"email\" id=\"email\" required />\n      </div>\n      <div>\n        <label for=\"phone\">Phone</label>\n        <input v-model=\"phone\" type=\"tel\" id=\"phone\" required />\n      </div>\n      <div>\n        <label for=\"password\">Password</label>\n        <input v-model=\"password\" type=\"password\" id=\"password\" required />\n      </div>\n      <div>\n        <label for=\"confirmPassword\">Confirm Password</label>\n        <input v-model=\"confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\n      </div>\n      <button type=\"submit\">Register</button>\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n      <p v-if=\"successMessage\" class=\"success\">{{ successMessage }}</p>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      successMessage: '',\n    };\n  },\n  methods: {\n    async submitForm() {\n  this.errorMessage = '';\n  this.successMessage = '';\n\n  if (this.password !== this.confirmPassword) {\n    this.errorMessage = 'Passwords do not match!';\n    return;\n  }\n\n  try {\n    const response = await axios.post('http://localhost:5000/api/register', {\n      username: this.username,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email: this.email,\n      phone: this.phone,\n      password: this.password,\n    });\n\n    if (response.data.success) {\n      this.successMessage = 'Registration successful! Please verify your email.';\n      this.resetForm();\n    }\n  } catch (error) {\n    console.error(error);  // Log the full error response to the console\n    this.errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\n  }\n},\n\n    resetForm() {\n      this.username = '';\n      this.firstName = '';\n      this.lastName = '';\n      this.email = '';\n      this.phone = '';\n      this.password = '';\n      this.confirmPassword = '';\n    },\n  },\n};\n</script>\n\n<style>\n/* Add some styling */\n.error {\n  color: red;\n}\n.success {\n  color: green;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}