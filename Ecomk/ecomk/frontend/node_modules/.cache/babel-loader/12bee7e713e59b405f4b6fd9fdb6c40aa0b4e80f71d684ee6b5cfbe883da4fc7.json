{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"success\"\n};\nconst _hoisted_5 = {\n  class: \"footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Reset Password\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleResetPassword && $options.handleResetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"usernameOrEmail\"\n  }, \"Email or Username\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"usernameOrEmail\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.usernameOrEmail = $event),\n    required: \"\",\n    placeholder: \"Enter your email or username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.usernameOrEmail]])]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Send Reset Link\", -1 /* HOISTED */)), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, [_cache[5] || (_cache[5] = _createTextVNode(\"Remembered your password? \")), _createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Login here\")])),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","handleResetPassword","_hoisted_2","for","type","id","$event","$data","usernameOrEmail","required","placeholder","errorMessage","_hoisted_3","_toDisplayString","_createCommentVNode","successMessage","_hoisted_4","_hoisted_5","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Reset.vue"],"sourcesContent":["<template>\r\n    <div class=\"reset-password-container\">\r\n      <h1>Reset Password</h1>\r\n      <form @submit.prevent=\"handleResetPassword\">\r\n        <div class=\"form-group\">\r\n          <label for=\"usernameOrEmail\">Email or Username</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"usernameOrEmail\" \r\n            v-model=\"usernameOrEmail\" \r\n            required \r\n            placeholder=\"Enter your email or username\" \r\n          />\r\n        </div>\r\n        <button type=\"submit\">Send Reset Link</button>\r\n        <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n        <div v-if=\"successMessage\" class=\"success\">{{ successMessage }}</div>\r\n      </form>\r\n      <div class=\"footer\">\r\n        <p>Remembered your password? <router-link to=\"/\">Login here</router-link></p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        usernameOrEmail: '', // The field to hold username or email input\r\n        errorMessage: '', // To display error messages\r\n        successMessage: '', // To display success messages\r\n      };\r\n    },\r\n    methods: {\r\n        async handleResetPassword() {\r\n  this.errorMessage = ''; // Reset error message\r\n  this.successMessage = ''; // Reset success message\r\n\r\n  const resetPasswordUrl = 'http://localhost:5000/api/reset-password'; // Endpoint to handle password reset\r\n\r\n  try {\r\n    console.log(\"Sending reset password request with:\", { identifier: this.usernameOrEmail });\r\n    console.log('Sending reset password request with:', this.identifier);\r\n\r\n    const response = await fetch(resetPasswordUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ identifier: this.usernameOrEmail }), // Send email or username\r\n    });\r\n\r\n    console.log(\"Response received:\", response);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      this.errorMessage = errorData.message || 'Unable to send reset link. Please try again.';\r\n      return;\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Reset password request successful:', data);\r\n\r\n    // Display success message\r\n    if (data.success) {\r\n      this.successMessage = 'If this email/username exists, you will receive a password reset link shortly.';\r\n    } else {\r\n      this.errorMessage = 'Unable to process the request. Please check your input and try again.';\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during password reset request:', error);\r\n    this.errorMessage = 'An error occurred. Please try again later.';\r\n  }\r\n}\r\n\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .reset-password-container {\r\n    max-width: 400px;\r\n    margin: 50px auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .success {\r\n    color: green;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .footer {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAA0B;;EAG5BA,KAAK,EAAC;AAAY;;EAJ/BC,GAAA;EAeiCD,KAAK,EAAC;;;EAfvCC,GAAA;EAgBmCD,KAAK,EAAC;;;EAE9BA,KAAK,EAAC;AAAQ;;;uBAjBrBE,mBAAA,CAoBM,OApBNC,UAoBM,G,0BAnBJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAcO;IAdAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAF,IAAA,CAAmB;MACxCJ,mBAAA,CASM,OATNO,UASM,G,0BARJP,mBAAA,CAAsD;IAA/CQ,GAAG,EAAC;EAAiB,GAAC,mBAAiB,sB,gBAC9CR,mBAAA,CAME;IALAS,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,iBAAiB;IARhC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IASqBC,KAAA,CAAAC,eAAe,GAAAF,MAAA;IACxBG,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;iDAFHH,KAAA,CAAAC,eAAe,E,+BAK5Bb,mBAAA,CAA8C;IAAtCS,IAAI,EAAC;EAAQ,GAAC,iBAAe,sBAC1BG,KAAA,CAAAI,YAAY,I,cAAvBlB,mBAAA,CAA+D,OAA/DmB,UAA+D,EAAAC,gBAAA,CAArBN,KAAA,CAAAI,YAAY,oBAf9DG,mBAAA,gBAgBmBP,KAAA,CAAAQ,cAAc,I,cAAzBtB,mBAAA,CAAqE,OAArEuB,UAAqE,EAAAH,gBAAA,CAAvBN,KAAA,CAAAQ,cAAc,oBAhBpED,mBAAA,e,4BAkBMnB,mBAAA,CAEM,OAFNsB,UAEM,GADJtB,mBAAA,CAA6E,Y,0BAnBrFuB,gBAAA,CAmBW,4BAA0B,IAAAC,YAAA,CAA4CC,sBAAA;IAA/BC,EAAE,EAAC;EAAG;IAnBxDC,OAAA,EAAAC,QAAA,CAmByD,MAAU1B,MAAA,QAAAA,MAAA,OAnBnEqB,gBAAA,CAmByD,YAAU,E;IAnBnEM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}