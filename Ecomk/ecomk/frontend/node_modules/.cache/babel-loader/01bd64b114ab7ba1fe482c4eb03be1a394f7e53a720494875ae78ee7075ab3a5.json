{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      sessionStatus: null,\n      // null: checking, true: session active, false: session not active\n      first_name: '',\n      // Store first name here\n      last_name: '',\n      // Store last name here\n      email: '',\n      // Store email here\n      phone: '',\n      // Store phone here\n      token: '' // Store token here\n    };\n  },\n  created() {\n    this.checkSession();\n  },\n  mounted() {\n    if (this.token) {\n      this.checkSession(this.token); // Use the token to check the session\n    }\n  },\n  methods: {\n    // Extract token from URL\n    async checkSession(token) {\n      if (!token) {\n        console.log(\"No token provided\");\n        this.sessionStatus = false;\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:5000/api/user-profile', {\n          params: {\n            token: token\n          },\n          withCredentials: true\n        });\n\n        // Check if response contains user data\n        if (response.data && response.data.user) {\n          console.log('Fetched user data:', response.data);\n          this.sessionStatus = true;\n          this.first_name = response.data.user.first_name || ''; // Default empty string if not found\n          this.last_name = response.data.user.last_name || ''; // Default empty string if not found\n          this.email = response.data.user.email || ''; // Default empty string if not found\n          this.phone = response.data.user.phone || ''; // Default empty string if not found\n\n          console.log('User data:', this.first_name, this.last_name, this.email, this.phone);\n        } else {\n          console.error('User data not found in the response');\n          this.sessionStatus = false;\n        }\n      } catch (error) {\n        console.error('Session not active:', error.response?.data || error);\n        this.sessionStatus = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","sessionStatus","first_name","last_name","email","phone","token","created","checkSession","mounted","methods","console","log","response","get","params","withCredentials","user","error"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\userProfile.vue"],"sourcesContent":["<template class=\"body\">\r\n  <div id=\"bg\">\r\n      <!-- Container for the profile page -->\r\n      <div class=\"content-wrapper\">\r\n          <!-- Profile image and details on the left side -->\r\n          <div class=\"profile-container\">\r\n              <div class=\"profile-details\">\r\n                  <h1>{{ user.first_name }} {{ user.last_name }}</h1>\r\n                  <p><strong>Email:</strong> {{ user.email }}</p>\r\n                  <p><strong>Phone:</strong> {{ user.phone }}</p>\r\n                  <p><strong>Username:</strong> {{ user.username }}</p>\r\n              </div>\r\n          </div>\r\n\r\n          <!-- Edit profile form on the right side -->\r\n          <div class=\"edit-profile-container\">\r\n              <h1>Edit Profile</h1><br><br>\r\n              <form @submit.prevent=\"handleEditProfile\">\r\n                  <div class=\"form-group\">\r\n                      <label for=\"firstName\">First Name</label>\r\n                      <input type=\"text\" id=\"first_name\" v-model=\"user.first_name\" required />\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <label for=\"lastName\">Last Name</label>\r\n                      <input type=\"text\" id=\"last_name\" v-model=\"user.last_name\" required />\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <label for=\"email\">Email</label>\r\n                      <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <label for=\"phone\">Phone</label>\r\n                      <input type=\"text\" id=\"phone\" v-model=\"user.phone\" required />\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <label for=\"username\">Username</label>\r\n                      <input type=\"text\" id=\"username\" v-model=\"user.username\" required />\r\n                  </div>\r\n                  <button type=\"submit\">Save Changes</button>\r\n              </form>\r\n              <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      sessionStatus: null, // null: checking, true: session active, false: session not active\r\n      first_name: '', // Store first name here\r\n      last_name: '', // Store last name here\r\n      email: '', // Store email here\r\n      phone: '', // Store phone here\r\n      token: '', // Store token here\r\n    };\r\n  },\r\n  created() {\r\n    this.checkSession();\r\n  },\r\n  mounted() {\r\n    if (this.token) {\r\n      this.checkSession(this.token); // Use the token to check the session\r\n    }\r\n  },\r\n  methods: {\r\n    // Extract token from URL\r\n    async checkSession(token) {\r\n  if (!token) {\r\n    console.log(\"No token provided\");\r\n    this.sessionStatus = false;\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get('http://localhost:5000/api/user-profile', {\r\n      params: { token: token },\r\n      withCredentials: true,\r\n    });\r\n\r\n    // Check if response contains user data\r\n    if (response.data && response.data.user) {\r\n      console.log('Fetched user data:', response.data);\r\n\r\n      this.sessionStatus = true;\r\n      this.first_name = response.data.user.first_name || ''; // Default empty string if not found\r\n      this.last_name = response.data.user.last_name || ''; // Default empty string if not found\r\n      this.email = response.data.user.email || ''; // Default empty string if not found\r\n      this.phone = response.data.user.phone || ''; // Default empty string if not found\r\n\r\n      console.log('User data:', this.first_name, this.last_name, this.email, this.phone);\r\n    } else {\r\n      console.error('User data not found in the response');\r\n      this.sessionStatus = false;\r\n    }\r\n  } catch (error) {\r\n    console.error('Session not active:', error.response?.data || error);\r\n    this.sessionStatus = false;\r\n  }\r\n}\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n/* Apply background color to the entire page */\r\n#bg {\r\n    background: linear-gradient(45deg, #D8C4A3, #A3D8C4, #D8A3C4);\r\n    height: 100vh;\r\n    background-size: 600% 600%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation: gradientAnimation 15s ease infinite;\r\n}\r\n\r\n@keyframes gradientAnimation {\r\n    0% { background-position: 0% 50%; }\r\n    50% { background-position: 100% 50%; }\r\n    100% { background-position: 0% 50%; }\r\n}\r\n\r\n/* Container for profile and edit form side by side */\r\n.content-wrapper {\r\n    display: flex;\r\n    width: 90%;\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    flex-wrap: wrap; /* Ensures elements stack on small screens */\r\n}\r\n\r\n/* Profile Section */\r\n.profile-container {\r\n    flex: 1;\r\n    padding: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.15);\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.profile-details {\r\n    text-align: center;\r\n}\r\n\r\n.profile-details h1 {\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n}\r\n\r\n.profile-details p {\r\n    font-size: 16px;\r\n}\r\n\r\n/* Edit Profile Section */\r\n.edit-profile-container {\r\n    flex: 1;\r\n    padding: 40px 30px;\r\n    margin-left: 20px;\r\n    background-color: rgba(255, 255, 255, 0.13);\r\n    border-radius: 10px;\r\n    backdrop-filter: blur(10px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n/* Form Styling */\r\n.form-group {\r\n    margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 10px;\r\n}\r\n\r\ninput {\r\n    width: 100%;\r\n    padding: 0 16px;\r\n    height: 50px;\r\n    background-color: rgba(255, 255, 255, 0.07);\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n}\r\n\r\nbutton {\r\n    margin-top: 20px;\r\n    width: 100%;\r\n    padding: 15px 0;\r\n    background-color: #28a745;\r\n    color: white;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    border-radius: 4px;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #218838;\r\n}\r\n\r\n/* Error Message */\r\n.error {\r\n    color: red;\r\n    margin-top: 10px;\r\n    text-align: center;\r\n}\r\n\r\n/* Responsive Styling */\r\n@media (max-width: 768px) {\r\n    .content-wrapper {\r\n        flex-direction: column;\r\n        padding: 20px;\r\n    }\r\n\r\n    .profile-container,\r\n    .edit-profile-container {\r\n        margin: 10px 0;\r\n    }\r\n    \r\n    .edit-profile-container {\r\n        margin-left: 0;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"AA+CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,IAAI;MAAE;MACrBC,UAAU,EAAE,EAAE;MAAE;MAChBC,SAAS,EAAE,EAAE;MAAE;MACfC,KAAK,EAAE,EAAE;MAAE;MACXC,KAAK,EAAE,EAAE;MAAE;MACXC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACH,KAAK,EAAE;MACd,IAAI,CAACE,YAAY,CAAC,IAAI,CAACF,KAAK,CAAC,EAAE;IACjC;EACF,CAAC;EACDI,OAAO,EAAE;IACP;IACA,MAAMF,YAAYA,CAACF,KAAK,EAAE;MAC5B,IAAI,CAACA,KAAK,EAAE;QACVK,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,IAAI,CAACX,aAAY,GAAI,KAAK;QAC1B;MACF;MAEA,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,wCAAwC,EAAE;UACzEC,MAAM,EAAE;YAAET,KAAK,EAAEA;UAAM,CAAC;UACxBU,eAAe,EAAE;QACnB,CAAC,CAAC;;QAEF;QACA,IAAIH,QAAQ,CAACb,IAAG,IAAKa,QAAQ,CAACb,IAAI,CAACiB,IAAI,EAAE;UACvCN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,QAAQ,CAACb,IAAI,CAAC;UAEhD,IAAI,CAACC,aAAY,GAAI,IAAI;UACzB,IAAI,CAACC,UAAS,GAAIW,QAAQ,CAACb,IAAI,CAACiB,IAAI,CAACf,UAAS,IAAK,EAAE,EAAE;UACvD,IAAI,CAACC,SAAQ,GAAIU,QAAQ,CAACb,IAAI,CAACiB,IAAI,CAACd,SAAQ,IAAK,EAAE,EAAE;UACrD,IAAI,CAACC,KAAI,GAAIS,QAAQ,CAACb,IAAI,CAACiB,IAAI,CAACb,KAAI,IAAK,EAAE,EAAE;UAC7C,IAAI,CAACC,KAAI,GAAIQ,QAAQ,CAACb,IAAI,CAACiB,IAAI,CAACZ,KAAI,IAAK,EAAE,EAAE;;UAE7CM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACV,UAAU,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,KAAK,CAAC;QACpF,OAAO;UACLM,OAAO,CAACO,KAAK,CAAC,qCAAqC,CAAC;UACpD,IAAI,CAACjB,aAAY,GAAI,KAAK;QAC5B;MACF,EAAE,OAAOiB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACL,QAAQ,EAAEb,IAAG,IAAKkB,KAAK,CAAC;QACnE,IAAI,CAACjB,aAAY,GAAI,KAAK;MAC5B;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}