{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      productName: \"\",\n      price: \"\",\n      category: \"\",\n      description: \"\",\n      categories: [],\n      message: \"\"\n    };\n  },\n  created() {\n    this.fetchCategories();\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/categories\");\n        this.categories = response.data;\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    },\n    async handleAddProduct() {\n      try {\n        const productData = {\n          name: this.productName,\n          price: this.price,\n          category_id: this.category,\n          description: this.description\n        };\n        const response = await axios.post(\"http://localhost:5000/api/products\", productData);\n        if (response.data.success) {\n          this.message = \"Product added successfully!\";\n          this.resetForm();\n        } else {\n          this.message = \"Failed to add product.\";\n        }\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n        this.message = \"An error occurred. Please try again.\";\n      }\n    },\n    resetForm() {\n      this.productName = \"\";\n      this.price = \"\";\n      this.category = \"\";\n      this.description = \"\";\n    }\n  }\n};","map":{"version":3,"names":["axios","data","productName","price","category","description","categories","message","created","fetchCategories","methods","response","get","error","console","handleAddProduct","productData","name","category_id","post","success","resetForm"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Add.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-product\">\r\n      <h1>Add New Product</h1>\r\n      <form @submit.prevent=\"handleAddProduct\">\r\n        <div class=\"form-group\">\r\n          <label for=\"productName\">Product Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"productName\"\r\n            v-model=\"productName\"\r\n            required\r\n            placeholder=\"Enter product name\"\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"price\">Price</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            v-model=\"price\"\r\n            required\r\n            placeholder=\"Enter price\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"category\">Category</label>\r\n          <select id=\"category\" v-model=\"category\" required>\r\n            <option value=\"\" disabled>Select a category</option>\r\n            <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\r\n              {{ cat.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description</label>\r\n          <textarea\r\n            id=\"description\"\r\n            v-model=\"description\"\r\n            placeholder=\"Enter product description\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n        </div>\r\n  \r\n        <button type=\"submit\">Add Product</button>\r\n  \r\n        <div v-if=\"message\" class=\"message\">{{ message }}</div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        productName: \"\",\r\n        price: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        categories: [],\r\n        message: \"\"\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchCategories();\r\n    },\r\n    methods: {\r\n      async fetchCategories() {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:5000/api/categories\");\r\n          this.categories = response.data;\r\n        } catch (error) {\r\n          console.error(\"Error fetching categories:\", error);\r\n        }\r\n      },\r\n      async handleAddProduct() {\r\n        try {\r\n          const productData = {\r\n            name: this.productName,\r\n            price: this.price,\r\n            category_id: this.category,\r\n            description: this.description\r\n          };\r\n  \r\n          const response = await axios.post(\r\n            \"http://localhost:5000/api/products\",\r\n            productData\r\n          );\r\n  \r\n          if (response.data.success) {\r\n            this.message = \"Product added successfully!\";\r\n            this.resetForm();\r\n          } else {\r\n            this.message = \"Failed to add product.\";\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error adding product:\", error);\r\n          this.message = \"An error occurred. Please try again.\";\r\n        }\r\n      },\r\n      resetForm() {\r\n        this.productName = \"\";\r\n        this.price = \"\";\r\n        this.category = \"\";\r\n        this.description = \"\";\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .add-product {\r\n    max-width: 600px;\r\n    margin: auto;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    background-color: #f9f9f9;\r\n  }\r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  input,\r\n  select,\r\n  textarea {\r\n    width: 100%;\r\n    padding: 8px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #28a745;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  button:hover {\r\n    background-color: #218838;\r\n  }\r\n  .message {\r\n    margin-top: 10px;\r\n    color: green;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAuDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,sCAAsC,CAAC;QACxE,IAAI,CAACN,UAAS,GAAIK,QAAQ,CAACV,IAAI;MACjC,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMC,WAAU,GAAI;UAClBC,IAAI,EAAE,IAAI,CAACf,WAAW;UACtBC,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBe,WAAW,EAAE,IAAI,CAACd,QAAQ;UAC1BC,WAAW,EAAE,IAAI,CAACA;QACpB,CAAC;QAED,MAAMM,QAAO,GAAI,MAAMX,KAAK,CAACmB,IAAI,CAC/B,oCAAoC,EACpCH,WACF,CAAC;QAED,IAAIL,QAAQ,CAACV,IAAI,CAACmB,OAAO,EAAE;UACzB,IAAI,CAACb,OAAM,GAAI,6BAA6B;UAC5C,IAAI,CAACc,SAAS,CAAC,CAAC;QAClB,OAAO;UACL,IAAI,CAACd,OAAM,GAAI,wBAAwB;QACzC;MACF,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,IAAI,CAACN,OAAM,GAAI,sCAAsC;MACvD;IACF,CAAC;IACDc,SAASA,CAAA,EAAG;MACV,IAAI,CAACnB,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,KAAI,GAAI,EAAE;MACf,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,WAAU,GAAI,EAAE;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}