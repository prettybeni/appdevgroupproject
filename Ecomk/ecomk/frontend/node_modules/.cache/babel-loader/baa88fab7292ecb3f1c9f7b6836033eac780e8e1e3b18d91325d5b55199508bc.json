{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      product: {},\n      // Store product details\n      quantity: 1,\n      sugarLevel: '',\n      size: '',\n      note: ''\n    };\n  },\n  mounted() {\n    const productId = this.$route.params.productId;\n    this.fetchProductDetails(productId);\n  },\n  methods: {\n    async fetchProductDetails(productId) {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/product/${productId}`);\n        if (response.data) {\n          this.product = response.data;\n        } else {\n          console.error('Empty product data received');\n        }\n      } catch (error) {\n        console.error('Error fetching product details:', error);\n      }\n    },\n    async addToCart() {\n      const cartItem = {\n        productId: this.product.id,\n        quantity: this.quantity,\n        sugarLevel: this.sugarLevel,\n        size: this.size,\n        note: this.note\n      };\n      try {\n        await axios.post('/api/cart', cartItem);\n        this.$router.push('/cart');\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","product","quantity","sugarLevel","size","note","mounted","productId","$route","params","fetchProductDetails","methods","response","get","console","error","addToCart","cartItem","id","post","$router","push"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\product.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-card\">\r\n    <!-- Product Image -->\r\n    <div class=\"product-image\">\r\n      <img :src=\"`http://localhost:5000${product.image_url}`\" :alt=\"product.name\" />\r\n    </div>\r\n\r\n    <!-- Product Details -->\r\n    <div class=\"product-details\">\r\n      <h2 class=\"product-name\">{{ product.name || 'Loading...' }}</h2>\r\n      <p class=\"product-price\">P{{ product.price || 'Loading...' }}</p>\r\n\r\n      <!-- Quantity -->\r\n      <div class=\"input-group\">\r\n        <label for=\"quantity\">Quantity:</label>\r\n        <input type=\"number\" id=\"quantity\" v-model=\"quantity\" min=\"1\" />\r\n      </div>\r\n\r\n      <!-- Sugar Level -->\r\n      <div class=\"input-group\">\r\n        <label for=\"sugarLevel\">Sugar Level:</label>\r\n        <input type=\"text\" id=\"sugarLevel\" v-model=\"sugarLevel\" placeholder=\"e.g., 50%, 75%\" />\r\n      </div>\r\n\r\n      <!-- Size -->\r\n      <div class=\"input-group\">\r\n        <label for=\"size\">Size:</label>\r\n        <select v-model=\"size\" id=\"size\">\r\n          <option v-for=\"(size, index) in product.sizes\" :key=\"index\" :value=\"size\">{{ size }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Note -->\r\n      <div class=\"input-group\">\r\n        <label for=\"note\">Note:</label>\r\n        <textarea v-model=\"note\" id=\"note\" placeholder=\"Add a note for the seller\"></textarea>\r\n      </div>\r\n\r\n      <!-- Add to Cart Button -->\r\n      <button @click=\"addToCart\">Add to Cart</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      product: {}, // Store product details\r\n      quantity: 1,\r\n      sugarLevel: '',\r\n      size: '',\r\n      note: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    const productId = this.$route.params.productId;\r\n    this.fetchProductDetails(productId);\r\n  },\r\n  methods: {\r\n    async fetchProductDetails(productId) {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/product/${productId}`);\r\n        if (response.data) {\r\n          this.product = response.data;\r\n        } else {\r\n          console.error('Empty product data received');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching product details:', error);\r\n      }\r\n    },\r\n    async addToCart() {\r\n      const cartItem = {\r\n        productId: this.product.id,\r\n        quantity: this.quantity,\r\n        sugarLevel: this.sugarLevel,\r\n        size: this.size,\r\n        note: this.note,\r\n      };\r\n\r\n      try {\r\n        await axios.post('/api/cart', cartItem);\r\n        this.$router.push('/cart');\r\n      } catch (error) {\r\n        console.error('Error adding to cart:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Product Card */\r\n.product-card {\r\n  max-width: 350px;\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n}\r\n\r\n/* Product Image */\r\n.product-image img {\r\n  width: 100%;\r\n  height: 150px; /* Reduced height */\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* Product Details */\r\n.product-details {\r\n  text-align: center;\r\n}\r\n\r\n/* Product Name */\r\n.product-name {\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  color: #333333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n/* Product Price */\r\n.product-price {\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  color: #ff6600;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* Input Groups */\r\n.input-group {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n}\r\n\r\n.input-group label {\r\n  font-size: 0.85em;\r\n  color: #666666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group input,\r\n.input-group select,\r\n.input-group textarea {\r\n  padding: 6px;\r\n  font-size: 0.85em;\r\n  border: 1px solid #cccccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Textarea Styling */\r\ntextarea {\r\n  resize: none;\r\n  height: 50px; /* Compact size */\r\n}\r\n\r\n/* Add to Cart Button */\r\nbutton {\r\n  background-color: #ff6600;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 0.9em;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #e85c00;\r\n}\r\n</style>\r\n"],"mappings":";AA6CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MAAE;MACbC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,SAAS;IAC9C,IAAI,CAACG,mBAAmB,CAACH,SAAS,CAAC;EACrC,CAAC;EACDI,OAAO,EAAE;IACP,MAAMD,mBAAmBA,CAACH,SAAS,EAAE;MACnC,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,qCAAqCN,SAAS,EAAE,CAAC;QAClF,IAAIK,QAAQ,CAACZ,IAAI,EAAE;UACjB,IAAI,CAACC,OAAM,GAAIW,QAAQ,CAACZ,IAAI;QAC9B,OAAO;UACLc,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;QAC9C;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMC,QAAO,GAAI;QACfV,SAAS,EAAE,IAAI,CAACN,OAAO,CAACiB,EAAE;QAC1BhB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,IAAI,EAAE,IAAI,CAACA;MACb,CAAC;MAED,IAAI;QACF,MAAMN,KAAK,CAACoB,IAAI,CAAC,WAAW,EAAEF,QAAQ,CAAC;QACvC,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC5B,EAAE,OAAON,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}