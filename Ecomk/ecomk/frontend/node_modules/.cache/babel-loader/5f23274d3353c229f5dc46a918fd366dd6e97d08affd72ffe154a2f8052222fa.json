{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      baseUrl: 'http://localhost:5000',\n      // Adjust this to your actual base URL\n      isModalVisible: false,\n      selectedProduct: {}\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get(`${this.baseUrl}/api/admin/products`);\n        this.products = response.data;\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    getImageUrl(imagePath) {\n      return `${this.baseUrl}${imagePath}`;\n    },\n    openEditModal(product) {\n      this.selectedProduct = {\n        ...product\n      }; // Create a copy to edit\n      this.isModalVisible = true;\n    },\n    closeEditModal() {\n      this.isModalVisible = false;\n      this.selectedProduct = {}; // Clear selected product\n    },\n    async updateProduct() {\n      try {\n        await axios.put(`${this.baseUrl}/api/admin/products/${this.selectedProduct.id}`, this.selectedProduct);\n        const index = this.products.findIndex(product => product.id === this.selectedProduct.id);\n        if (index !== -1) {\n          this.products.splice(index, 1, this.selectedProduct); // Update the product in the list\n        }\n        this.closeEditModal();\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    async deleteProduct(productId) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await axios.delete(`${this.baseUrl}/api/admin/products/${productId}`);\n          this.products = this.products.filter(product => product.id !== productId);\n          console.log('Product deleted:', productId);\n        } catch (error) {\n          console.error('Error deleting product:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","baseUrl","isModalVisible","selectedProduct","mounted","fetchProducts","methods","response","get","error","console","getImageUrl","imagePath","openEditModal","product","closeEditModal","updateProduct","put","id","index","findIndex","splice","deleteProduct","productId","confirm","delete","filter","log"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Manage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Products</h1>\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          <th>Image</th>\r\n          <th>Name</th>\r\n          <th>Price</th>\r\n          <th>Category</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"products.length === 0\">\r\n          <td colspan=\"5\" style=\"text-align: center;\">No products available.</td>\r\n        </tr>\r\n        <tr v-for=\"product in products\" :key=\"product.id\">\r\n          <td>\r\n            <img :src=\"getImageUrl(product.image_url)\" alt=\"Product Image\" style=\"width: 100px; height: auto;\" />\r\n          </td>\r\n          <td>{{ product.name }}</td>\r\n          <td>P{{ product.price }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td>\r\n            <button @click=\"openEditModal(product)\">Edit</button>\r\n            <button @click=\"deleteProduct(product.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Modal for editing product -->\r\n    <div v-if=\"isModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeEditModal\">&times;</span>\r\n        <h2>Edit Product</h2>\r\n        <form @submit.prevent=\"updateProduct\">\r\n          <label for=\"image_url\">Image URL:</label>\r\n          <input type=\"text\" v-model=\"selectedProduct.image_url\" required />\r\n\r\n          <label for=\"name\">Name:</label>\r\n          <input type=\"text\" v-model=\"selectedProduct.name\" required />\r\n\r\n          <label for=\"price\">Price:</label>\r\n          <input type=\"number\" v-model=\"selectedProduct.price\" required />\r\n\r\n          <label for=\"category\">Category:</label>\r\n          <input type=\"text\" v-model=\"selectedProduct.category\" required />\r\n\r\n          <button type=\"submit\">Save</button>\r\n          <button type=\"button\" @click=\"closeEditModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      baseUrl: 'http://localhost:5000', // Adjust this to your actual base URL\r\n      isModalVisible: false,\r\n      selectedProduct: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchProducts();\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get(`${this.baseUrl}/api/admin/products`);\r\n        this.products = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n    getImageUrl(imagePath) {\r\n      return `${this.baseUrl}${imagePath}`;\r\n    },\r\n    openEditModal(product) {\r\n      this.selectedProduct = { ...product }; // Create a copy to edit\r\n      this.isModalVisible = true;\r\n    },\r\n    closeEditModal() {\r\n      this.isModalVisible = false;\r\n      this.selectedProduct = {}; // Clear selected product\r\n    },\r\n    async updateProduct() {\r\n      try {\r\n        await axios.put(`${this.baseUrl}/api/admin/products/${this.selectedProduct.id}`, this.selectedProduct);\r\n        const index = this.products.findIndex(product => product.id === this.selectedProduct.id);\r\n        if (index !== -1) {\r\n          this.products.splice(index, 1, this.selectedProduct); // Update the product in the list\r\n        }\r\n        this.closeEditModal();\r\n      } catch (error) {\r\n        console.error('Error updating product:', error);\r\n      }\r\n    },\r\n    async deleteProduct(productId) {\r\n      if (confirm('Are you sure you want to delete this product?')) {\r\n        try {\r\n          await axios.delete(`${this.baseUrl}/api/admin/products/${productId}`);\r\n          this.products = this.products.filter(product => product.id !== productId);\r\n          console.log('Product deleted:', productId);\r\n        } catch (error) {\r\n          console.error('Error deleting product:', error);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  padding: 10px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\nth {\r\n  background-color: #f4f4f4;\r\n}\r\n\r\nbutton {\r\n  margin-right: 5px;\r\n}\r\n\r\n.modal {\r\n  display: flex;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgb(0,0,0);\r\n  background-color: rgba(0,0,0,0.4);\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n}\r\n\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;AA2DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,uBAAuB;MAAE;MAClCC,cAAc,EAAE,KAAK;MACrBC,eAAe,EAAE,CAAC;IACpB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,qBAAqB,CAAC;QACtE,IAAI,CAACD,QAAO,GAAIO,QAAQ,CAACR,IAAI;MAC/B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDE,WAAWA,CAACC,SAAS,EAAE;MACrB,OAAO,GAAG,IAAI,CAACX,OAAO,GAAGW,SAAS,EAAE;IACtC,CAAC;IACDC,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACX,eAAc,GAAI;QAAE,GAAGW;MAAQ,CAAC,EAAE;MACvC,IAAI,CAACZ,cAAa,GAAI,IAAI;IAC5B,CAAC;IACDa,cAAcA,CAAA,EAAG;MACf,IAAI,CAACb,cAAa,GAAI,KAAK;MAC3B,IAAI,CAACC,eAAc,GAAI,CAAC,CAAC,EAAE;IAC7B,CAAC;IACD,MAAMa,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAG,IAAI,CAAChB,OAAO,uBAAuB,IAAI,CAACE,eAAe,CAACe,EAAE,EAAE,EAAE,IAAI,CAACf,eAAe,CAAC;QACtG,MAAMgB,KAAI,GAAI,IAAI,CAACnB,QAAQ,CAACoB,SAAS,CAACN,OAAM,IAAKA,OAAO,CAACI,EAAC,KAAM,IAAI,CAACf,eAAe,CAACe,EAAE,CAAC;QACxF,IAAIC,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAACnB,QAAQ,CAACqB,MAAM,CAACF,KAAK,EAAE,CAAC,EAAE,IAAI,CAAChB,eAAe,CAAC,EAAE;QACxD;QACA,IAAI,CAACY,cAAc,CAAC,CAAC;MACvB,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACD,MAAMa,aAAaA,CAACC,SAAS,EAAE;MAC7B,IAAIC,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D,IAAI;UACF,MAAM1B,KAAK,CAAC2B,MAAM,CAAC,GAAG,IAAI,CAACxB,OAAO,uBAAuBsB,SAAS,EAAE,CAAC;UACrE,IAAI,CAACvB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAAC0B,MAAM,CAACZ,OAAM,IAAKA,OAAO,CAACI,EAAC,KAAMK,SAAS,CAAC;UACzEb,OAAO,CAACiB,GAAG,CAAC,kBAAkB,EAAEJ,SAAS,CAAC;QAC5C,EAAE,OAAOd,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}