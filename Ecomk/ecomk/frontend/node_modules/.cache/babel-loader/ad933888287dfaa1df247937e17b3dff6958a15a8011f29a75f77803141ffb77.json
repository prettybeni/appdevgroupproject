{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      usernameOrEmail: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.errorMessage = ''; // Reset error message\n\n      const loginUrl = 'http://localhost:5000/api/login'; // Ensure correct login endpoint\n\n      try {\n        const response = await fetch(loginUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.usernameOrEmail,\n            password: this.password\n          })\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          this.errorMessage = errorData.message || 'Login failed. Please try again.';\n          return;\n        }\n        const data = await response.json();\n        console.log('Login successful:', data);\n\n        // Save the token in sessionStorage\n        if (data.token) {\n          sessionStorage.setItem('auth_token', data.token); // Save token for authenticated requests\n\n          // Redirect based on the role\n          if (data.redirectUrl) {\n            this.$router.push(data.redirectUrl);\n          } else {\n            this.errorMessage = 'No redirect URL provided for the user role.';\n          }\n        } else {\n          this.errorMessage = 'Token missing in response. Please contact support.';\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        this.errorMessage = 'An error occurred. Please try again later.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","usernameOrEmail","password","errorMessage","methods","handleLogin","loginUrl","response","fetch","method","headers","body","JSON","stringify","email","ok","errorData","json","message","console","log","token","sessionStorage","setItem","redirectUrl","$router","push","error"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template class=\"body\">\n  <div id=\"bg\">\n    <!-- Container for the image and login form -->\n    <div class=\"content-wrapper\">\n      <!-- Image on the left side -->\n      <div class=\"image-container\">\n        <img src=\"../../public/img/logo.png\" alt=\"Logo\" class=\"logo-image\" />\n      </div>\n\n      <!-- Login form on the right side -->\n      <div class=\"login-container\">\n        <h1>Login</h1><br><br>\n        <form @submit.prevent=\"handleLogin\">\n          <div class=\"form-group\">\n            <label for=\"usernameOrEmail\">Email or Username</label>\n            <input type=\"text\" id=\"usernameOrEmail\" v-model=\"usernameOrEmail\" required placeholder=\"Email or username\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" v-model=\"password\" required placeholder=\"Enter your password\" />\n            <p id=\"res\"><router-link to=\"/reset-password\">Forgot your password?</router-link></p> <!-- Reset password link -->\n          </div>\n          <button type=\"submit\">Login</button>\n          <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\n          <div class=\"footer\">\n            <p>Don't have an account? <router-link to=\"/register\">Register here</router-link></p>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name:'Login',\n  data() {\n    return {\n      usernameOrEmail: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n  async handleLogin() {\n    this.errorMessage = ''; // Reset error message\n\n    const loginUrl = 'http://localhost:5000/api/login'; // Ensure correct login endpoint\n\n    try {\n      const response = await fetch(loginUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: this.usernameOrEmail,\n          password: this.password,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        this.errorMessage = errorData.message || 'Login failed. Please try again.';\n        return;\n      }\n\n      const data = await response.json();\n      console.log('Login successful:', data);\n\n      // Save the token in sessionStorage\n      if (data.token) {\n        sessionStorage.setItem('auth_token', data.token); // Save token for authenticated requests\n\n        // Redirect based on the role\n        if (data.redirectUrl) {\n          this.$router.push(data.redirectUrl);\n        } else {\n          this.errorMessage = 'No redirect URL provided for the user role.';\n        }\n      } else {\n        this.errorMessage = 'Token missing in response. Please contact support.';\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      this.errorMessage = 'An error occurred. Please try again later.';\n    }\n  },\n}\n\n};\n</script>\n\n<style scoped>\n/* Apply background color to the entire page */\n#bg {\n  background: linear-gradient(45deg, #D8C4A3, #A3D8C4, #D8A3C4);\n  height: 100vh; /* Ensure it takes up the full height of the viewport */\n  background-size: 600% 600%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  animation: gradientAnimation 15s ease infinite;\n}\n\n@keyframes gradientAnimation {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n/* Container for image and login form side by side */\n.content-wrapper {\n  display: flex;\n  width: 80%; /* Adjust width as needed */\n  max-width: 1200px; /* Set max-width */\n}\n\n.image-container {\n  flex: 1; /* Takes up half the width */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.logo-image {\n  width: 80%; /* Adjust image size */\n  max-width: 400px; /* Set a max width for the image */\n  height: auto;\n  margin-right: 200px;\n}\n\n.login-container {\n  flex: .6; /* Takes up the other half of the width */\n  padding: 50px 40px;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  background-color: rgba(255, 255, 255, 0.13);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Optional: Add shadow for better contrast */\n  border-radius: 10px;\n  backdrop-filter: blur(10px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n}\n\n/* Form group styling */\n.form-group {\n  margin-bottom: 20px; /* Reduce space between input fields */\n  display: flex;\n  flex-direction: column; /* Stack label above the textbox */\n  align-items: flex-start; /* Align the label to the left */\n}\n\nlabel {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 10px;\n}\n\ninput {\n  display: block;\n  width: 100%; /* Ensure textboxes take the full width */\n  box-sizing: border-box; /* Ensures padding doesn't affect the width */\n  height: 50px; /* Match the textbox height */\n  background-color: rgba(255,255,255,0.07);\n  border-radius: 3px;\n  padding: 0 16px; /* Equal padding on both sides */\n  font-size: 14px;\n  font-weight: 300;\n}\n\n#res {\n  font-size: 14px;\n  text-align: right;\n  margin-left: 58%;\n}\n\n.form-group a{\n  color: #007bff;\n\n}\n\nbutton {\n  margin-top: 20px;\n  width: 100%; /* Ensure the button takes up the full width */\n  padding: 15px 0;\n  background-color: #28a745;\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #218838;\n}\n\n.error {\n  color: red;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.footer {\n  margin-top: 20px;\n  text-align: center;\n  font-size: 14px;\n}\n\n.footer a {\n  color: #007bff;\n}\n</style>\n"],"mappings":";AAkCA,eAAe;EACbA,IAAI,EAAC,OAAO;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,CAACF,YAAW,GAAI,EAAE,EAAE;;MAExB,MAAMG,QAAO,GAAI,iCAAiC,EAAE;;MAEpD,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,QAAQ,EAAE;UACrCG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAE,IAAI,CAACb,eAAe;YAC3BC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACK,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAMC,SAAQ,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACvC,IAAI,CAACd,YAAW,GAAIa,SAAS,CAACE,OAAM,IAAK,iCAAiC;UAC1E;QACF;QAEA,MAAMlB,IAAG,GAAI,MAAMO,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEpB,IAAI,CAAC;;QAEtC;QACA,IAAIA,IAAI,CAACqB,KAAK,EAAE;UACdC,cAAc,CAACC,OAAO,CAAC,YAAY,EAAEvB,IAAI,CAACqB,KAAK,CAAC,EAAE;;UAElD;UACA,IAAIrB,IAAI,CAACwB,WAAW,EAAE;YACpB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC1B,IAAI,CAACwB,WAAW,CAAC;UACrC,OAAO;YACL,IAAI,CAACrB,YAAW,GAAI,6CAA6C;UACnE;QACF,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,oDAAoD;QAC1E;MACF,EAAE,OAAOwB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,IAAI,CAACxB,YAAW,GAAI,4CAA4C;MAClE;IACF;EACF;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}