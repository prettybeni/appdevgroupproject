{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      newPassword: '',\n      confirmPassword: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async submitNewPassword() {\n      if (this.newPassword !== this.confirmPassword) {\n        this.errorMessage = \"Passwords do not match.\";\n        return;\n      }\n      this.errorMessage = '';\n      try {\n        const token = this.$route.params.token;\n        if (!token) {\n          this.errorMessage = \"Invalid or expired token.\";\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/password-changed`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token,\n            newPassword: this.newPassword\n          })\n        });\n        if (response.status === 200) {\n          this.$router.push('/password-changed');\n        } else {\n          const data = await response.json();\n          this.errorMessage = data.message || 'An error occurred. Please try again.';\n        }\n      } catch (error) {\n        this.errorMessage = 'An error occurred. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","newPassword","confirmPassword","errorMessage","methods","submitNewPassword","token","$route","params","response","fetch","method","headers","body","JSON","stringify","status","$router","push","json","message","error"],"sources":["C:\\Users\\norma\\project\\ecomk\\frontend\\src\\views\\NewPassword.vue"],"sourcesContent":["<template>\r\n  <div id=\"bg\">\r\n    <!-- Container for the reset password form -->\r\n    <div class=\"content-wrapper\">\r\n      <!-- Image on the left side -->\r\n      <div class=\"image-container\">\r\n        <img src=\"../../public/img/logo.png\" alt=\"Logo\" class=\"logo-image\" />\r\n      </div>\r\n\r\n      <!-- Reset Password form on the right side -->\r\n      <div class=\"login-container\">\r\n        <h1>Reset Password</h1><br><br>\r\n        \r\n        <form @submit.prevent=\"submitNewPassword\">\r\n          <div class=\"form-group\">\r\n            <label for=\"newPassword\">New Password</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"newPassword\" \r\n              v-model=\"newPassword\" \r\n              required \r\n              placeholder=\"Enter new password\" \r\n            />\r\n          </div>\r\n  \r\n          <div class=\"form-group\">\r\n            <label for=\"confirmPassword\">Confirm New Password</label>\r\n            <input \r\n              type=\"password\" \r\n              id=\"confirmPassword\" \r\n              v-model=\"confirmPassword\" \r\n              required \r\n              placeholder=\"Confirm new password\" \r\n            />\r\n          </div>\r\n\r\n          <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n          \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async submitNewPassword() {\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.errorMessage = \"Passwords do not match.\";\r\n        return;\r\n      }\r\n\r\n      this.errorMessage = '';\r\n\r\n      try {\r\n        const token = this.$route.params.token;\r\n        if (!token) {\r\n          this.errorMessage = \"Invalid or expired token.\";\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(`http://localhost:5000/api/password-changed`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            token,\r\n            newPassword: this.newPassword\r\n          })\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          this.$router.push('/password-changed');\r\n        } else {\r\n          const data = await response.json();\r\n          this.errorMessage = data.message || 'An error occurred. Please try again.';\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = 'An error occurred. Please try again.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#bg {\r\n  background: linear-gradient(45deg, #D8C4A3, #A3D8C4, #D8A3C4);\r\n  height: 100vh;\r\n  background-size: 600% 600%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  animation: gradientAnimation 15s ease infinite;\r\n}\r\n\r\n@keyframes gradientAnimation {\r\n  0% { background-position: 0% 50%; }\r\n  50% { background-position: 100% 50%; }\r\n  100% { background-position: 0% 50%; }\r\n}\r\n\r\n.content-wrapper {\r\n  display: flex;\r\n  width: 80%;\r\n  max-width: 1200px;\r\n}\r\n\r\n.image-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.logo-image {\r\n  width: 80%;\r\n  max-width: 400px;\r\n  height: auto;\r\n  margin-right: 200px;\r\n}\r\n\r\n.login-container {\r\n  flex: .6;\r\n  padding: 50px 40px;\r\n  border: 2px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(255, 255, 255, 0.13);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  border-radius: 10px;\r\n  backdrop-filter: blur(10px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: stretch;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\nlabel {\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  margin-bottom: 10px;\r\n}\r\n\r\ninput {\r\n  display: block;\r\n  box-sizing: border-box; /* Ensures padding doesn't affect the width */\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: rgba(255, 255, 255, 0.07);\r\n  border-radius: 3px;\r\n  padding: 0 16px;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n}\r\n\r\nbutton {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  background-color: #28a745;\r\n  color: white;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  border-radius: 4px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"],"mappings":";AA8CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI,IAAI,CAACJ,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC7C,IAAI,CAACC,YAAW,GAAI,yBAAyB;QAC7C;MACF;MAEA,IAAI,CAACA,YAAW,GAAI,EAAE;MAEtB,IAAI;QACF,MAAMG,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,KAAK;QACtC,IAAI,CAACA,KAAK,EAAE;UACV,IAAI,CAACH,YAAW,GAAI,2BAA2B;UAC/C;QACF;QAEA,MAAMM,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA4C,EAAE;UACzEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBT,KAAK;YACLL,WAAW,EAAE,IAAI,CAACA;UACpB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIQ,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,mBAAmB,CAAC;QACxC,OAAO;UACL,MAAMlB,IAAG,GAAI,MAAMS,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClC,IAAI,CAAChB,YAAW,GAAIH,IAAI,CAACoB,OAAM,IAAK,sCAAsC;QAC5E;MACF,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAAClB,YAAW,GAAI,sCAAsC;MAC5D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}